!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.Sketchpad=e()}}(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){function installArithmeticConstraints(Sketchpad){Sketchpad.arith={};function installRef(target,ref,prefix){target[prefix+"_obj"]=ref.obj;target[prefix+"_prop"]=ref.prop}function ref(target,prefix){return target[prefix+"_obj"][target[prefix+"_prop"]]}function fnRef(target,prefix){var rcvr=target[prefix+"_obj"];return rcvr[target[prefix+"_prop"]].call(rcvr)}function patch(target){var result={};for(var i=1;i<arguments.length;i+=2){var prefix=arguments[i];var newVal=arguments[i+1];var d=result[prefix+"_obj"];if(!d){result[prefix+"_obj"]=d={}}d[target[prefix+"_prop"]]=newVal}return result}Sketchpad.arith.ValueConstraint=function Sketchpad__arith__ValueConstraint(ref,value){installRef(this,ref,"v");this.value=value};sketchpad.addClass(Sketchpad.arith.ValueConstraint,true);Sketchpad.arith.ValueConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return this.value-ref(this,"v")};Sketchpad.arith.ValueConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return patch(this,"v",this.value)};Sketchpad.arith.ValueConstraint.description=function(){return"Sketchpad.arith.ValueConstraint({obj: O, prop: p}, Value) states that O.p = Value."};Sketchpad.arith.ValueConstraint.prototype.description=function(){return this.v_obj.__toString+"."+this.v_prop+" = "+this.value+"."};Sketchpad.arith.ValueConstraint.dummy=function(x,y){return new Sketchpad.arith.ValueConstraint({obj:new Point(1,1),prop:"x"},42)};Sketchpad.arith.EqualityConstraint=function Sketchpad__arith__EqualityConstraint(ref1,ref2,optOnlyWriteTo,k1,k2){this.k1=k1||1,this.k2=k2||1;installRef(this,ref1,"v1");installRef(this,ref2,"v2");this.onlyWriteTo=optOnlyWriteTo||[1,2]};sketchpad.addClass(Sketchpad.arith.EqualityConstraint,true);Sketchpad.arith.EqualityConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var diff=this.k1*ref(this,"v1")-this.k2*ref(this,"v2");return diff};Sketchpad.arith.EqualityConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var v1=this.k1*ref(this,"v1"),v2=this.k2*ref(this,"v2");ks=[this.k1,this.k2];var vs=[v1,v2];var onlyWriteTo=this.onlyWriteTo;var diff=v1-v2;var div=onlyWriteTo.length;var args=[this];onlyWriteTo.forEach(function(i){var sign=i>1?1:-1;args.push("v"+i);args.push((vs[i-1]+sign*diff/div)/ks[i-1])});res=patch.apply(this,args);return res};Sketchpad.arith.EqualityConstraint.description=function(){return"Sketchpad.arith.EqualityConstraint({obj: O1, prop: p1}, {obj: O2, prop: p2}, WritableIdxs, Number K1, Number K2) states that K1 * O1.p1 = K2 * O2.p2 . Constants K1-2 default to 1. Optional WritableIdxs gives a list of indices (elements 1,and/or 2) the constraint is allowed to change,"};Sketchpad.arith.EqualityConstraint.prototype.description=function(){return this.k1+" * "+this.v1_obj.__toString+"."+this.v1_prop+" = "+this.k2+" * "+this.v2_obj.__toString+"."+this.v2_prop+" ."};Sketchpad.arith.EqualityConstraint.prototype.effects=function(){return[{obj:this.v1_obj,props:[this.v1_prop]},{obj:this.v2_obj,props:[this.v2_prop]}]};Sketchpad.arith.EqualityConstraint.dummy=function(x,y){return new Sketchpad.arith.EqualityConstraint({obj:new Point(1,1),prop:"x"},{obj:new Point(1,1),prop:"x"})};Sketchpad.arith.OneWayEqualityConstraint=function Sketchpad__arith__OneWayEqualityConstraint(ref1,ref2,optSecondPropIsFn){installRef(this,ref1,"v1");installRef(this,ref2,"v2");this.secondPropIsFn=optSecondPropIsFn};sketchpad.addClass(Sketchpad.arith.OneWayEqualityConstraint,true);Sketchpad.arith.OneWayEqualityConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var v2=this.secondPropIsFn?fnRef(this,"v2"):ref(this,"v2");var e=ref(this,"v1")==v2?0:1;return e};Sketchpad.arith.OneWayEqualityConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var v2=this.secondPropIsFn?fnRef(this,"v2"):ref(this,"v2");return patch(this,"v1",v2)};Sketchpad.arith.OneWayEqualityConstraint.description=function(){return"Sketchpad.arith.OneWayEqualityConstraint({obj: O1, prop: p1}, {obj: O2, prop: p2}, Boolean secondPropIsFn) states that O1.p1 = O2.p2 (right hand-side is  read-only). If secondPropIsFn = true then O2.p2() is invoked instead."};Sketchpad.arith.OneWayEqualityConstraint.prototype.description=function(){var r1=ref(this,"v1"),r2=ref(this,"v2");return this.v1_obj.__toString+"."+this.v1_prop+" = "+this.v2_obj.__toString+"."+this.v2_prop+" and right hand-side is read-only."};Sketchpad.arith.OneWayEqualityConstraint.prototype.effects=function(){return[{obj:this.v1_obj,props:[this.v1_prop]}]};Sketchpad.arith.OneWayEqualityConstraint.dummy=function(x,y){return new Sketchpad.arith.OneWayEqualityConstraint({obj:new Point(1,1),prop:"x"},{obj:new Point(1,1),prop:"x"})};Sketchpad.arith.InequalityConstraint=function Sketchpad__arith__InequalityConstraint(ref1,ref2,isGeq,k1,k2,k3){this.k1=k1||1,this.k2=k2||1,this.k3=k3||0;installRef(this,ref1,"v1");installRef(this,ref2,"v2");this.isGeq=isGeq};sketchpad.addClass(Sketchpad.arith.InequalityConstraint,true);Sketchpad.arith.InequalityConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var v1=this.k1*ref(this,"v1"),v2=this.k2*ref(this,"v2")+this.k3,cond=this.isGeq?v1>=v2:v1<=v2,e=cond?0:v2-v1;return e};Sketchpad.arith.InequalityConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var v2=this.k2*ref(this,"v2")+this.k3;res=patch(this,"v1",v2/this.k1);return res};Sketchpad.arith.InequalityConstraint.description=function(){return"Sketchpad.arith.InequalityConstraint({obj: O1, prop: p1}, {obj: O2, prop: p2}, isGeq, Number K1, Number K2, Number K3) states that K1 * O1.p1 >= K2 * O2.p2 + K3 (when isGeq=true) or K1 * O1.p1 <= K2 * O2.p2 + K3 (when isGeq=false). Constants K1-2 default to 1 and K3 to 0"};Sketchpad.arith.InequalityConstraint.prototype.description=function(){var r1=ref(this,"v1"),r2=ref(this,"v2");return this.k1+" * "+this.v1_obj.__toString+"."+this.v1_prop+" "+(this.isGeq?">":"<")+"= "+this.k2+" * "+this.v2_obj.__toString+"."+this.v2_prop+" + "+this.k3+" ."};Sketchpad.arith.InequalityConstraint.prototype.effects=function(){return[{obj:this.v1_obj,props:[this.v1_prop]},{obj:this.v2_obj,props:[this.v2_prop]}]};Sketchpad.arith.InequalityConstraint.dummy=function(x,y){return new Sketchpad.arith.InequalityConstraint({obj:new Point(1,1),prop:"x"},{obj:new Point(1,1),prop:"x"},true)};Sketchpad.arith.SumConstraint=function Sketchpad__arith__SumConstraint(ref1,ref2,ref3,optOnlyWriteTo,k1,k2,k3,k4){this.k1=k1||1,this.k2=k2||1,this.k3=k3||1,this.k4=k4||0;installRef(this,ref1,"v1");installRef(this,ref2,"v2");installRef(this,ref3,"v3");this.onlyWriteTo=optOnlyWriteTo||[1,2,3]};sketchpad.addClass(Sketchpad.arith.SumConstraint,true);Sketchpad.arith.SumConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var diff=this.k3*ref(this,"v3")+this.k4-(this.k1*ref(this,"v1")+this.k2*ref(this,"v2"));return diff};Sketchpad.arith.SumConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var v1=this.k1*ref(this,"v1");var v2=this.k2*ref(this,"v2");var v3=this.k3*ref(this,"v3");var vs=[v1,v2,v3],ks=[this.k1,this.k2,this.k3];var diff=v3+this.k4-(v1+v2);var onlyWriteTo=this.onlyWriteTo;var div=onlyWriteTo.length;var args=[this];onlyWriteTo.forEach(function(i){var sign=i>2?-1:1;args.push("v"+i);args.push((vs[i-1]+sign*diff/div)/ks[i-1])});res=patch.apply(this,args);return res};Sketchpad.arith.SumConstraint.description=function(){return"Sketchpad.arith.SumConstraint({obj: O1, prop: p1}, {obj: O2, prop: p2}, {obj: O3, prop: p3}, WritableIdxs, Number K1, Number K2, Number K3, Number K4) states that K1 * O1.p1 + K2 * O2.p2 = K3 * O3.p3 + K4 . Constants K1-3 default to 1 and K4 to 0. Optional WritableIdxs gives a list of indices (1, 2, or, 3) the constraint is allowed to change."};Sketchpad.arith.SumConstraint.prototype.description=function(){var r1=ref(this,"v1"),r2=ref(this,"v2"),r3=ref(this,"v3");return this.k1+" * "+this.v1_obj.__toString+"."+this.v1_prop+" + "+this.k2+" * "+this.v2_obj.__toString+"."+this.v2_prop+" = "+this.k3+" * "+this.v3_obj.__toString+"."+this.v3_prop+" + "+this.k4+" ."};Sketchpad.arith.SumConstraint.prototype.effects=function(){return[{obj:this.v1_obj,props:[this.v1_prop]},{obj:this.v2_obj,props:[this.v2_prop]},{obj:this.v3_obj,props:[this.v3_prop]}]};Sketchpad.arith.SumConstraint.dummy=function(x,y){return new Sketchpad.arith.SumConstraint({obj:new Point(1,1),prop:"x"},{obj:new Point(1,1),prop:"x"},{obj:new Point(1,1),prop:"x"})};Sketchpad.arith.SumInequalityConstraint=function Sketchpad__arith__SumInequalityConstraint(ref1,ref2,ref3,isGeq,k1,k2,k3,k4){this.k1=k1||1,this.k2=k2||1,this.k3=k3||1,this.k4=k4||0;installRef(this,ref1,"v1");installRef(this,ref2,"v2");installRef(this,ref3,"v3");this.isGeq=isGeq};sketchpad.addClass(Sketchpad.arith.SumInequalityConstraint,true);Sketchpad.arith.SumInequalityConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var v1=this.k1*ref(this,"v1"),v2=this.k2*ref(this,"v2"),v3=this.k3*ref(this,"v3"),sum=v2+v3+this.k4,cond=this.isGeq?v1>=sum:v1<=sum,e=cond?0:sum-v1;return e};Sketchpad.arith.SumInequalityConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){v2=this.k2*ref(this,"v2"),v3=this.k3*ref(this,"v3"),sum=v2+v3+this.k4;res=patch(this,"v1",sum/this.k1);return res};Sketchpad.arith.SumInequalityConstraint.prototype.effects=function(){return[{obj:this.v1_obj,props:[this.v1_prop]}]};Sketchpad.arith.SumInequalityConstraint.description=function(){return"Sketchpad.arith.SumInequalityConstraint({obj: O1, prop: p1}, {obj: O2, prop: p2}, {obj: O3, prop: p3}, isGeq, Number K1, Number K2, Number K3, Number K4) states that K1 * O1.p1 >=  k2 * O2.p2  + k3 * O3.p3 + K4  or  K1 * O1.p1 <=  K2 * O2.p2 + K3 * O3.p3 + K4 (>= when isGeq=true)"};Sketchpad.arith.SumInequalityConstraint.prototype.description=function(){var r1=ref(this,"v1"),r2=ref(this,"v2"),r3=ref(this,"v3");return this.k1+" * "+this.v1_obj.__toString+"."+this.v1_prop+" "+(this.isGeq?">":"<")+"= "+this.k2+" * "+this.v2_obj.__toString+" + "+this.k3+" * "+this.v3_obj.__toString+"."+this.v3_prop+" + "+this.k4+" ."};Sketchpad.arith.SumInequalityConstraint.dummy=function(x,y){return new Sketchpad.arith.SumInequalityConstraint({obj:new Point(1,1),prop:"x"},{obj:new Point(1,1),prop:"x"},{obj:new Point(1,1),prop:"x"},true)}}module.exports.install=installArithmeticConstraints},{}],2:[function(require,module,exports){function installGeometricConstraints(Sketchpad){Sketchpad.geom={};function square(n){return n*n}function plus(p1,p2){return{x:p1.x+p2.x,y:p1.y+p2.y}}function minus(p1,p2){return{x:p1.x-p2.x,y:p1.y-p2.y}}function scaledBy(p,m){return{x:p.x*m,y:p.y*m}}function copy(p){return scaledBy(p,1)}function midpoint(p1,p2){return scaledBy(plus(p1,p2),.5)}function magnitude(p){return Math.sqrt(square(p.x)+square(p.y))}function normalized(p){var m=magnitude(p);return m>0?scaledBy(p,1/m):p}function distance(p1,p2){return Math.sqrt(square(p1.x-p2.x)+square(p1.y-p2.y))}function rotatedBy(p,dTheta){var c=Math.cos(dTheta);var s=Math.sin(dTheta);return{x:c*p.x-s*p.y,y:s*p.x+c*p.y}}function rotatedAround(p,dTheta,axis){return plus(axis,rotatedBy(minus(p,axis),dTheta))}function setDelta(d,p,scale){d.x=p.x*scale;d.y=p.y*scale}Sketchpad.geom.square=square;Sketchpad.geom.plus=plus;Sketchpad.geom.minus=minus;Sketchpad.geom.scaledBy=scaledBy;Sketchpad.geom.copy=copy;Sketchpad.geom.midpoint=midpoint;Sketchpad.geom.magnitude=magnitude;Sketchpad.geom.normalized=normalized;Sketchpad.geom.distance=distance;Sketchpad.geom.rotatedBy=rotatedBy;Sketchpad.geom.rotatedAround=rotatedAround;Sketchpad.geom.setDelta=setDelta;Sketchpad.geom.drawVisualizationLine=function(canvas,origin,p1,p2,l){var ctxt=canvas.ctxt;ctxt.lineWidth=1;ctxt.strokeStyle="yellow";ctxt.beginPath();var angle=Math.atan2(p2.y-p1.y,p2.x-p1.x);var dist=25;var p1x=origin.x+p1.x-dist*Math.cos(angle+Math.PI/2);var p1y=origin.y+p1.y-dist*Math.sin(angle+Math.PI/2);var p2x=origin.x+p2.x-dist*Math.cos(angle+Math.PI/2);var p2y=origin.y+p2.y-dist*Math.sin(angle+Math.PI/2);var textCenterX=(p1x+p2x)/2-dist/2*Math.cos(angle+Math.PI/2);var textCenterY=(p1y+p2y)/2-dist/2*Math.sin(angle+Math.PI/2);ctxt.moveTo(p1x+5*Math.cos(angle+Math.PI/2),p1y+5*Math.sin(angle+Math.PI/2));ctxt.lineTo(p1x-5*Math.cos(angle+Math.PI/2),p1y-5*Math.sin(angle+Math.PI/2));ctxt.moveTo(p1x,p1y);ctxt.lineTo(p2x,p2y);ctxt.moveTo(p2x+5*Math.cos(angle+Math.PI/2),p2y+5*Math.sin(angle+Math.PI/2));ctxt.lineTo(p2x-5*Math.cos(angle+Math.PI/2),p2y-5*Math.sin(angle+Math.PI/2));ctxt.closePath();ctxt.stroke();ctxt.textAlign="center";ctxt.textBaseline="middle";ctxt.strokeText(Math.round(l),textCenterX,textCenterY);ctxt.stroke()};Sketchpad.geom.calculateAngle=function(p1,p2,p3,p4){var v12={x:p2.x-p1.x,y:p2.y-p1.y};var a12=Math.atan2(v12.y,v12.x);var v34={x:p4.x-p3.x,y:p4.y-p3.y};var a34=Math.atan2(v34.y,v34.x);return(a12-a34+2*Math.PI)%(2*Math.PI)};Sketchpad.geom.CoordinateConstraint=function Sketchpad__geom__CoordinateConstraint(p,x,y){this.p=p;this.c=new Point(x,y)};sketchpad.addClass(Sketchpad.geom.CoordinateConstraint,true);Sketchpad.geom.CoordinateConstraint.prototype.propertyTypes={p:"Point",c:"Point"};Sketchpad.geom.CoordinateConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return magnitude(minus(this.c,this.p))};Sketchpad.geom.CoordinateConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{p:{x:this.c.x,y:this.c.y}}};Sketchpad.geom.CoordinateConstraint.description=function(){return"Sketchpad.geom.CoordinateConstraint(Point P, Number X, Number Y) states that point P should stay at coordinate (X, Y)."};Sketchpad.geom.CoordinateConstraint.prototype.description=function(){return"point p ("+this.p.__toString+") should stay at coordinate ("+this.c.x+", "+this.c.y+")."};Sketchpad.geom.CoordinateConstraint.prototype.effects=function(){return[{obj:this.p,props:["x","y"]}]};Sketchpad.geom.CoordinateConstraint.dummy=function(x,y){var p1=Point.dummy(x,y);var p2=Point.dummy(y,x);return new Sketchpad.geom.CoordinateConstraint(p1,p2.x,p2.y)};Sketchpad.geom.CoordinateConstraint.prototype.draw=function(canvas,origin){var ctxt=canvas.ctxt;if(this.p.isSelected)return;ctxt.fillStyle="black";ctxt.beginPath();ctxt.arc(this.c.x+origin.x,this.c.y+origin.y,canvas.pointRadius*.666,0,2*Math.PI);ctxt.closePath();ctxt.fill()};Sketchpad.geom.CoincidenceConstraint=function Sketchpad__geom__CoincidenceConstraint(p1,p2){this.p1=p1;this.p2=p2};sketchpad.addClass(Sketchpad.geom.CoincidenceConstraint,true);Sketchpad.geom.CoincidenceConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return magnitude(minus(this.p2,this.p1))};Sketchpad.geom.CoincidenceConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var splitDiff=scaledBy(minus(this.p2,this.p1),.5);return{p1:plus(this.p1,splitDiff),p2:plus(this.p2,scaledBy(splitDiff,-1))}};Sketchpad.geom.CoincidenceConstraint.description=function(){return"Sketchpad.geom.CoincidenceConstraint(Point P1, Poiont P2) states that points P1 & P2 should be at the same place."};Sketchpad.geom.CoincidenceConstraint.prototype.description=function(){return"points p1 ("+this.p1.__toString+") & p2 ("+this.p2.__toString+") should be at the same place."};Sketchpad.geom.CoincidenceConstraint.dummy=function(x,y){var l=Line.dummy(x,y);return new Sketchpad.geom.CoincidenceConstraint(l.p1,l.p2)};Sketchpad.geom.EquivalenceConstraint=function Sketchpad__geom__EquivalenceConstraint(p1,p2,p3,p4){this.p1=p1;this.p2=p2;this.p3=p3;this.p4=p4};sketchpad.addClass(Sketchpad.geom.EquivalenceConstraint,true);Sketchpad.geom.EquivalenceConstraint.prototype.propertyTypes={p1:"Point",p2:"Point",p3:"Point",p4:"Point"};Sketchpad.geom.EquivalenceConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return magnitude(minus(plus(this.p2,this.p3),plus(this.p1,this.p4)))};Sketchpad.geom.EquivalenceConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var splitDiff=scaledBy(minus(plus(this.p2,this.p3),plus(this.p1,this.p4)),.25);return{p1:plus(this.p1,splitDiff),p2:plus(this.p2,scaledBy(splitDiff,-1)),p3:plus(this.p3,scaledBy(splitDiff,-1)),p4:plus(this.p4,splitDiff)}};Sketchpad.geom.EquivalenceConstraint.description=function(){return"Sketchpad.geom.EquivalenceConstraint(Point P1, Point P2, Point P3, Point P4) says line sections P1-2 and P3-4 are parallel and of the same lengths."};Sketchpad.geom.EquivalenceConstraint.prototype.description=function(){return"line sections  p1 ("+this.p1.__toString+") -p2 ("+this.p2.__toString+") and  p3 ("+this.p3.__toString+") -p4 ("+this.p4.__toString+") are parallel and of the same lengths."};Sketchpad.geom.EquivalenceConstraint.dummy=function(x,y){var l1=Line.dummy(x,y);var l2=Line.dummy(y,x);return new Sketchpad.geom.EquivalenceConstraint(l1.p1,l1.p2,l2.p1,l2.p2)};Sketchpad.geom.EquivalenceConstraint.prototype.draw=function(canvas,origin){var l=distance(this.p1,this.p2);Sketchpad.geom.drawVisualizationLine(canvas,origin,this.p1,this.p2,l);Sketchpad.geom.drawVisualizationLine(canvas,origin,this.p3,this.p4,l)};Sketchpad.geom.EquivalenceConstraint.prototype.containsPoint=function(x,y){var p1=this.p1,p2=this.p2,p3=this.p3,p4=this.p4;var x1=Math.min(p1.x,p2.x,p3.x,p4.x),x2=Math.max(p1.x,p2.x,p3.x,p4.x);var y1=Math.min(p1.y,p2.y,p3.y,p4.y),y2=Math.max(p1.y,p2.y,p3.y,p4.y);this.__border=new Box(new Point(x1,y1),x2-x1,y2-y1);return this.__border.containsPoint(x,y)};Sketchpad.geom.EquivalenceConstraint.prototype.border=function(){var p1=this.p1,p2=this.p2,p3=this.p3,p4=this.p4;var x1=Math.min(p1.x,p2.x,p3.x,p4.x),x2=Math.max(p1.x,p2.x,p3.x,p4.x);var y1=Math.min(p1.y,p2.y,p3.y,p4.y),y2=Math.max(p1.y,p2.y,p3.y,p4.y);this.__border=new Box(new Point(x1,y1),x2-x1,y2-y1);return this.__border};Sketchpad.geom.OneWayEquivalenceConstraint=function Sketchpad__geom__OneWayEquivalenceConstraint(p1,p2,p3,p4){this.p1=p1;this.p2=p2;this.p3=p3;this.p4=p4};sketchpad.addClass(Sketchpad.geom.OneWayEquivalenceConstraint,true);Sketchpad.geom.OneWayEquivalenceConstraint.prototype.propertyTypes={p1:"Point",p2:"Point",p3:"Point",p4:"Point"};Sketchpad.geom.OneWayEquivalenceConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return magnitude(minus(plus(this.p2,this.p3),plus(this.p1,this.p4)))};Sketchpad.geom.OneWayEquivalenceConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var splitDiff=scaledBy(minus(plus(this.p2,this.p3),plus(this.p1,this.p4)),.5);return{p1:plus(this.p1,splitDiff),p2:plus(this.p2,scaledBy(splitDiff,-1))}};Sketchpad.geom.OneWayEquivalenceConstraint.description=function(){return"Sketchpad.geom.OneWayEquivalenceConstraint(Point P1, Point P2, Point P3, Point P4) says the vectors P1->P2 always matches with P3->P4"};Sketchpad.geom.OneWayEquivalenceConstraint.prototype.description=function(){return"vectors p1 ("+this.p1.__toString+") ->p2 ("+this.p2.__toString+") always matches with p3 ("+this.p3.__toString+") ->p4 ("+this.p4.__toString+") ."};Sketchpad.geom.OneWayEquivalenceConstraint.dummy=function(x,y){var l1=Line.dummy(x,y);var l2=Line.dummy(y,x);return new Sketchpad.geom.OneWayEquivalenceConstraint(l1.p1,l1.p2,l2.p1,l2.p2)};Sketchpad.geom.EqualDistanceConstraint=function Sketchpad__geom__EqualDistanceConstraint(p1,p2,p3,p4){this.p1=p1;this.p2=p2;this.p3=p3;this.p4=p4};sketchpad.addClass(Sketchpad.geom.EqualDistanceConstraint,true);Sketchpad.geom.EqualDistanceConstraint.prototype.propertyTypes={p1:"Point",p2:"Point",p3:"Point",p4:"Point"};Sketchpad.geom.EqualDistanceConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var l12=magnitude(minus(this.p1,this.p2));var l34=magnitude(minus(this.p3,this.p4));return l12-l34};Sketchpad.geom.EqualDistanceConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var l12=magnitude(minus(this.p1,this.p2));var l34=magnitude(minus(this.p3,this.p4));var delta=(l12-l34)/4;var e12=scaledBy(Sketchpad.geom.normalized(minus(this.p2,this.p1)),delta);var e34=scaledBy(Sketchpad.geom.normalized(minus(this.p4,this.p3)),delta);return{p1:plus(this.p1,e12),p2:plus(this.p2,scaledBy(e12,-1)),p3:plus(this.p3,scaledBy(e34,-1)),p4:plus(this.p4,e34)}};Sketchpad.geom.EqualDistanceConstraint.description=function(){return"Sketchpad.geom.EqualDistanceConstraint(Point P1, Point P2, Point P3, Point P4) keeps distances P1->P2, P3->P4 equal."};Sketchpad.geom.EqualDistanceConstraint.prototype.description=function(){return"distances p1 ("+this.p1.__toString+") ->p2 ("+this.p2.__toString+") & p3 ("+this.p3.__toString+") ->p4 ("+this.p4.__toString+") are equal."};Sketchpad.geom.EqualDistanceConstraint.dummy=function(x,y){var l1=Line.dummy(x,y);var l2=Line.dummy(y,x);return new Sketchpad.geom.EqualDistanceConstraint(l1.p1,l1.p2,l2.p1,l2.p2)};Sketchpad.geom.LengthConstraint=function Sketchpad__geom__LengthConstraint(p1,p2,l,onlyOneWritable){this.p1=p1;this.p2=p2;this.l=l;this._onlyOneWritable=onlyOneWritable};sketchpad.addClass(Sketchpad.geom.LengthConstraint,true);Sketchpad.geom.LengthConstraint.prototype.propertyTypes={p1:"Point",p2:"Point",l:"Number"};Sketchpad.geom.LengthConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var l12=magnitude(minus(this.p1,this.p2));return l12-this.l};Sketchpad.geom.LengthConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var p1=this.p1,p2=this.p2;var l12=magnitude(minus(p1,p2));if(l12==0){p1=plus(p1,{x:.1,y:0});p2=plus(p2,{x:-.1,y:0})}var delta=(l12-this.l)/(this._onlyOneWritable?1:2);var e12=scaledBy(Sketchpad.geom.normalized(minus(p2,p1)),delta);var res={p2:plus(this.p2,scaledBy(e12,-1))};if(!this._onlyOneWritable)res["p1"]=plus(this.p1,e12);return res};Sketchpad.geom.LengthConstraint.description=function(){return"Sketchpad.geom.LengthConstraint(Point P1, Point P2, Number L) says points P1 and P2 always maintain a distance of L."};Sketchpad.geom.LengthConstraint.prototype.description=function(){return"points p1 ("+this.p1.__toString+") and p2 ("+this.p2.__toString+") always maintain a distance of "+this.l+"."};Sketchpad.geom.LengthConstraint.prototype.effects=function(){return[{obj:this.p1,props:["x","y"]},{obj:this.p2,props:["x","y"]}]};Sketchpad.geom.LengthConstraint.dummy=function(x,y){return new Sketchpad.geom.LengthConstraint(new Point(x-50,y-50),new Point(x+50,y+50),100)};Sketchpad.geom.LengthConstraint.prototype.draw=function(canvas,origin){Sketchpad.geom.drawVisualizationLine(canvas,origin,this.p1,this.p2,this.l)};Sketchpad.geom.LengthConstraint.prototype.containsPoint=function(x,y){var p1=this.p1,p2=this.p2;var angle=Math.atan2(p2.y-p1.y,p2.x-p1.x);var dist=25;var p1x=p1.x-dist*Math.cos(angle+Math.PI/2);var p1y=p1.y-dist*Math.sin(angle+Math.PI/2);var p2x=p2.x-dist*Math.cos(angle+Math.PI/2);var p2y=p2.y-dist*Math.sin(angle+Math.PI/2);var textCenterX=(p1x+p2x)/2-dist/2*Math.cos(angle+Math.PI/2);var textCenterY=(p1y+p2y)/2-dist/2*Math.sin(angle+Math.PI/2);this.__border=new Box(new Point(textCenterX-50,textCenterY-50),100,100);return this.__border.containsPoint(x,y)};Sketchpad.geom.LengthConstraint.prototype.border=function(){var p1=this.p1,p2=this.p2;var angle=Math.atan2(p2.y-p1.y,p2.x-p1.x);var dist=25;var p1x=p1.x-dist*Math.cos(angle+Math.PI/2);var p1y=p1.y-dist*Math.sin(angle+Math.PI/2);var p2x=p2.x-dist*Math.cos(angle+Math.PI/2);var p2y=p2.y-dist*Math.sin(angle+Math.PI/2);var textCenterX=(p1x+p2x)/2-dist/2*Math.cos(angle+Math.PI/2);var textCenterY=(p1y+p2y)/2-dist/2*Math.sin(angle+Math.PI/2);this.__border=new Box(new Point(textCenterX-50,textCenterY-50),100,100);return this.__border};Sketchpad.geom.OrientationConstraint=function Sketchpad__geom__OrientationConstraint(p1,p2,p3,p4,theta){this.p1=p1;this.p2=p2;this.p3=p3;this.p4=p4;this.theta=theta===undefined?Sketchpad.geom.calculateAngle(p1,p2,p3,p4):theta};sketchpad.addClass(Sketchpad.geom.OrientationConstraint,true);Sketchpad.geom.OrientationConstraint.prototype.propertyTypes={p1:"Point",p2:"Point",p3:"Point",p4:"Point",theta:"Number"};Sketchpad.geom.OrientationConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var v12=minus(this.p2,this.p1);var a12=Math.atan2(v12.y,v12.x);var m12=midpoint(this.p1,this.p2);var v34=minus(this.p4,this.p3);var a34=Math.atan2(v34.y,v34.x);var m34=midpoint(this.p3,this.p4);var currTheta=a12-a34;var dTheta=this.theta-currTheta;return dTheta};Sketchpad.geom.OrientationConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var v12=minus(this.p2,this.p1);var a12=Math.atan2(v12.y,v12.x);var m12=midpoint(this.p1,this.p2);var v34=minus(this.p4,this.p3);var a34=Math.atan2(v34.y,v34.x);var m34=midpoint(this.p3,this.p4);var currTheta=a12-a34;var dTheta=this.theta-currTheta;return{p1:rotatedAround(this.p1,dTheta,m12),p2:rotatedAround(this.p2,dTheta,m12),p3:rotatedAround(this.p3,-dTheta,m34),p4:rotatedAround(this.p4,-dTheta,m34)}};Sketchpad.geom.OrientationConstraint.description=function(){return"Sketchpad.geom.OrientationConstraint(Point P1, Point P2, Point P3, Point P4, Number Theta) maintains angle between P1->P2 and P3->P4 at Theta."};Sketchpad.geom.OrientationConstraint.prototype.description=function(){return"angle is maintained between p1 ("+this.p1.__toString+") ->p2 ("+this.p2.__toString+") and p3 ("+this.p3.__toString+") ->p4 ("+this.p4.__toString+") at "+this.theta+" radians."};Sketchpad.geom.OrientationConstraint.dummy=function(x,y){var l1=Line.dummy(x,y);var l2=Line.dummy(y,x);return new Sketchpad.geom.OrientationConstraint(l1.p1,l1.p2,l2.p1,l2.p2)};Sketchpad.geom.OrientationConstraint.prototype.draw=function(canvas,origin){var ctxt=canvas.ctxt;var m1=scaledBy(plus(this.p1,this.p2),.5);var m2=scaledBy(plus(this.p3,this.p4),.5);var m=scaledBy(plus(m1,m2),.5);canvas.drawArrow(m1,m2,origin);ctxt.fillStyle="red";ctxt.fillText("theta = "+Math.floor(this.theta/Math.PI*180),m.x+origin.x,m.y+origin.y)};Sketchpad.geom.OrientationConstraint.prototype.containsPoint=function(x,y){var m1=scaledBy(plus(this.p1,this.p2),.5);var m2=scaledBy(plus(this.p3,this.p4),.5);var m=scaledBy(plus(m1,m2),.5);this.__border=new Box(new Point(m.x-50,m.y-50),100,100);return this.__border.containsPoint(x,y)};Sketchpad.geom.OrientationConstraint.prototype.border=function(){var m1=scaledBy(plus(this.p1,this.p2),.5);var m2=scaledBy(plus(this.p3,this.p4),.5);var m=scaledBy(plus(m1,m2),.5);this.__border=new Box(new Point(m.x-50,m.y-50),100,100);return this.__border};Sketchpad.geom.MotorConstraint=function Sketchpad__geom__MotorConstraint(p1,p2,w){this.p1=p1;this.p2=p2;this.w=w};sketchpad.addClass(Sketchpad.geom.MotorConstraint,true);Sketchpad.geom.MotorConstraint.prototype.propertyTypes={p1:"Point",p2:"Point",w:"Number"};Sketchpad.geom.MotorConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return 1};Sketchpad.geom.MotorConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var t=(pseudoTime-prevPseudoTime)/1e3;var dTheta=t*this.w*(2*Math.PI);var m12=midpoint(this.p1,this.p2);return{p1:rotatedAround(this.p1,dTheta,m12),p2:rotatedAround(this.p2,dTheta,m12)}};Sketchpad.geom.MotorConstraint.description=function(){return"Sketchpad.geom.MotorConstraint(Point P1, Point P2, Number W) causes P1 and P2 to orbit their midpoint at the given rate of w, in units of Hz: whole rotations per second."};Sketchpad.geom.MotorConstraint.prototype.description=function(){return"p1 ("+this.p1.__toString+") and p2 ("+this.p2.__toString+") to orbit their midpoint at the given rate of "+this.w+", in units of Hz: whole rotations per second."};Sketchpad.geom.MotorConstraint.dummy=function(x,y){var l=Line.dummy(x,y);return new Sketchpad.geom.MotorConstraint(l.p1,l.p2,1)};Sketchpad.geom.CartesianPointConstraint=function Sketchpad__geom__CartesianPointConstraint(position,vector,origin,unit){this.position=position;this.vector=vector;this.origin=origin;this.unit=unit};sketchpad.addClass(Sketchpad.geom.CartesianPointConstraint,true);Sketchpad.geom.CartesianPointConstraint.description=function(){return"Sketchpad.geom.CartesianPointConstraint(Point P, Vector V, Point O, Number U) states that P should be positioned based on vector V's X and Y discrete coordinate values, and on origin O and each unit on axis having a vertical and horizontal length of U"};Sketchpad.geom.CartesianPointConstraint.prototype.description=function(){return""+this.position.__toString+" should be positioned based on vector "+this.vector.__toString+"'s X and Y discrete coordinate values, and on origin "+this.origin.__toString+" and each unit on axis having a vertical and horizontal length of "+this.unit};Sketchpad.geom.CartesianPointConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var origin=this.origin,vector=this.vector,position=this.position,unit=this.unit;var diffX=Math.abs(origin.x+unit*vector.x-position.x);var diffY=Math.abs(origin.y-unit*vector.y-position.y);return diffX+diffY};Sketchpad.geom.CartesianPointConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var origin=this.origin,vector=this.vector,position=this.position,unit=this.unit;var x=origin.x+unit*vector.x;var y=origin.y-unit*vector.y;return{position:{x:x,y:y}}}}module.exports.install=installGeometricConstraints},{}],3:[function(require,module,exports){function installSimulationConstraints(Sketchpad){Sketchpad.simulation={g:9.8,G:6.7e-11};var minus=Sketchpad.geom.minus;var plus=Sketchpad.geom.plus;var scaledBy=Sketchpad.geom.scaledBy;var normalized=Sketchpad.geom.normalized;var magnitude=Sketchpad.geom.magnitude;var distance=Sketchpad.geom.distance;Sketchpad.simulation.FreeBody=function Sketchpad__simulation__FreeBody(position,optRadius,optMass){this.position=position;this.mass=optMass||10;this.velocity=new Vector(0,0);this.acceleration=new Vector(0,0);this.radius=optRadius||this.position.radius;rc.add(position)};sketchpad.addClass(Sketchpad.simulation.FreeBody);Sketchpad.simulation.FreeBody.prototype.propertyTypes={position:"Point",mass:"Number",radius:"Number"};Sketchpad.simulation.FreeBody.dummy=function(x,y){return new Sketchpad.simulation.FreeBody(Point.dummy(x,y),10,10)};Sketchpad.simulation.FreeBody.prototype.containsPoint=function(x,y){return this.position.containsPoint(x,y)};Sketchpad.simulation.FreeBody.prototype.center=function(){return this.position};Sketchpad.simulation.FreeBody.prototype.border=function(){return this.position.border()};Sketchpad.simulation.FreeBody.prototype.draw=function(canvas,origin){};Sketchpad.simulation.Spring=function Sketchpad__simulation__Spring(body1,body2,k,length,tearPointAmount){this.body1=body1;this.body1=body2;this.line=new Line(body1.position,body2.position);this.k=k;this.length=length;this.tearPointAmount=tearPointAmount;this.torn=false;this._normalColor=new Color(150,150,150)};sketchpad.addClass(Sketchpad.simulation.Spring);Sketchpad.simulation.Spring.prototype.propertyTypes={body1:"FreeBody",body2:"FreeBody",k:"Number",length:"Number",teatPointAmount:"Number"};Sketchpad.simulation.Spring.dummy=function(x,y){var b1=FreeBody.dummy(x,y);var b2=FreeBody.dummy(x+100,y+100);var d=distance(b1.p1,b2.p2);return new Sketchpad.simulation.Spring(b1,b2,10,d,d*5)};Sketchpad.simulation.Spring.prototype.containsPoint=function(x,y){return this.line.containsPoint(x,y)};Sketchpad.simulation.Spring.prototype.center=function(){return this.line.center()};Sketchpad.simulation.Spring.prototype.border=function(){return new Line(this.line.p1,this.line.p2,undefined,8).border()};Sketchpad.simulation.Spring.prototype.solutionJoins=function(){return{torn:rc.sketchpad.lastOneWinsJoinSolutions}
};Sketchpad.simulation.Spring.prototype.draw=function(canvas,origin){var ctxt=canvas.ctxt;var line=this.line;var p1=line.p1,p2=line.p2;var y1=origin.y+p1.y;var y2=origin.y+p2.y;var x1=origin.x+p1.x;var x2=origin.x+p2.x;if(!this.torn){var stretch=Math.floor(Math.sqrt(Math.pow(y1-y2,2)+Math.pow(x1-x2,2))-this.length);var stretchP=Math.abs(stretch);this._normalColor.red=Math.min(255,150+stretchP);line.color=this._normalColor.hexString();line.draw(canvas,origin);ctxt.fillStyle="black";ctxt.fillText(stretch,(x1+x2)/2,(y1+y2)/2)}};Sketchpad.simulation.detectContact=function(halfLength,position,velocity,surfaceP1,surfaceP2){var quarterLength=halfLength/2;var positionX=position.x;var positionY=position.y;var surfaceX1=surfaceP1.x;var surfaceY1=surfaceP1.y;var surfaceX2=surfaceP2.x;var surfaceY2=surfaceP2.y;var slope=(surfaceY2-surfaceY1)/(surfaceX2-surfaceX1);var surfaceHitPosX=(positionY-surfaceY1)/slope+surfaceX1;var surfaceHitPosY=(positionX-surfaceX1)*slope+surfaceY1;var isVertical=positionX>=surfaceX1-quarterLength&&positionX<=surfaceX2+quarterLength;var isHorizontal=positionY>=surfaceY1-quarterLength&&positionY<=surfaceY2+quarterLength;var isUp=isVertical&&positionY<=surfaceHitPosY;var isDown=isVertical&&positionY>=surfaceHitPosY;var isLeft=isHorizontal&&positionX<=surfaceHitPosX;var isRight=isHorizontal&&positionX>=surfaceHitPosX;return isUp&&velocity.y>=0&&positionY>=surfaceHitPosY-halfLength||isDown&&velocity.y<=0&&positionY<=surfaceHitPosY+halfLength||(isLeft&&velocity.x>=0&&positionX<=surfaceHitPosX&&positionX>=surfaceHitPosX-halfLength||isRight&&velocity.x<=0&&positionX>=surfaceHitPosX&&positionX<=surfaceHitPosX+halfLength)};Sketchpad.simulation.computeContact=function(halfLength,position,velocity,surfaceP1,surfaceP2){var quarterLength=halfLength/2;var positionX=position.x;var positionY=position.y;var surfaceX1=surfaceP1.x;var surfaceY1=surfaceP1.y;var surfaceX2=surfaceP2.x;var surfaceY2=surfaceP2.y;var slope=(surfaceY2-surfaceY1)/(surfaceX2-surfaceX1);var surfaceHitPosX=(positionY-surfaceY1)/slope+surfaceX1;var surfaceHitPosY=(positionX-surfaceX1)*slope+surfaceY1;var isVertical=positionX>=surfaceX1-quarterLength&&positionX<=surfaceX2+quarterLength;var isHorizontal=positionY>=surfaceY1-quarterLength&&positionY<=surfaceY2+quarterLength;var isUp=isVertical&&positionY<=surfaceHitPosY;var isDown=isVertical&&positionY>=surfaceHitPosY;var isLeft=isHorizontal&&positionX<=surfaceHitPosX;var isRight=isHorizontal&&positionX>=surfaceHitPosX;var velocityMagnitude=magnitude(velocity);var distance=0;if(isUp&&velocity.y>=0){distance=surfaceHitPosY-(positionY+halfLength)}else if(isDown&&velocity.y<=0){distance=positionY-halfLength-surfaceHitPosY}else if(isLeft&&velocity.x>=0&&positionX<=surfaceHitPosX){distance=surfaceHitPosX-(positionX+halfLength)}else if(isRight&&velocity.x<=0&&positionX>=surfaceHitPosX){distance=positionX-halfLength-surfaceHitPosX}else{return 1e6}var time=distance/velocityMagnitude;return Math.max(0,time)};Sketchpad.simulation.slope=function(p1,p2){return(p1.y-p2.y)/(p1.x-p2.x)};Sketchpad.simulation.angle=function(p1,p2){return Math.atan2(p1.y-p2.y,p2.x-p1.x)};Sketchpad.simulation.slopeVectorWrong=function(p1,p2){var slope=this.slope(p1,p2),atn=Math.atan(slope);var sign=p1.x<p2.x?-1:1;return normalized({x:sign*Math.sin(atn),y:sign*Math.cos(atn)})};Sketchpad.simulation.slopeVector=function(p1,p2){var slope=this.slope(p1,p2),atn=Math.atan(slope);var signX=p1.x<p2.x?1:-1;var signY=p1.y<p2.y?1:-1;return normalized({x:signX*Math.cos(atn),y:signX*Math.sin(atn)})};Sketchpad.simulation.TimerConstraint=function Sketchpad__simulation__TimerConstraint(timer){this.timer=timer};sketchpad.addClass(Sketchpad.simulation.TimerConstraint,true);Sketchpad.simulation.TimerConstraint.description=function(){return"Sketchpad.simulation.Timer(Timer T) states the system advances its pseudo-time by T's step size at each frame cycle."};Sketchpad.simulation.TimerConstraint.prototype.description=function(){return"the system advances its pseudo-time by "+this.timer.stepSize+" at each frame cycle."};Sketchpad.simulation.TimerConstraint.prototype.propertyTypes={timer:"Timer"};Sketchpad.simulation.TimerConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return 0};Sketchpad.simulation.TimerConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{}};Sketchpad.simulation.TimerConstraint.dummy=function(x,y){return new Sketchpad.simulation.TimerConstraint(Sketchpad.simulation.Timer.dummy(x,y))};Sketchpad.simulation.TimerConstraint.prototype.proposeNextPseudoTime=function(pseudoTime){return pseudoTime+this.timer.stepSize};Sketchpad.simulation.ValueSliderConstraint=function Sketchpad__simulation__ValueSliderConstraint(sliderPoint,xOrY,sliderZeroValue,sliderRangeLength,slidedObj,slidedProp){this.sliderPoint=sliderPoint;this.xOrY=xOrY;this.sliderZeroValue=sliderZeroValue;this.sliderRangeLength=sliderRangeLength;this.slidedObj=slidedObj;this.slidedProp=slidedProp;this.slidedObjPropZeroValue=slidedObj[slidedProp]};sketchpad.addClass(Sketchpad.simulation.ValueSliderConstraint,true);Sketchpad.simulation.ValueSliderConstraint.prototype.propertyTypes={sliderPoint:"Point",xOrY:"String",sliderZeroValue:"Number",sliderRangeLength:"Number",slidedObjPropZeroValue:"Number"};Sketchpad.simulation.ValueSliderConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var slidedProp=this.slidedProp;var currSliderDiff=(this.sliderZeroValue-this.sliderPoint[this.xOrY])/this.sliderRangeLength;var slidedObjPropTarget=(1+currSliderDiff)*this.slidedObjPropZeroValue;return slidedObjPropTarget-this.slidedObj[slidedProp]};Sketchpad.simulation.ValueSliderConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var soln={};var slidedProp=this.slidedProp;var currSliderDiff=(this.sliderZeroValue-this.sliderPoint[this.xOrY])/this.sliderRangeLength;var slidedObjPropTarget=(1+currSliderDiff)*this.slidedObjPropZeroValue;soln[slidedProp]=slidedObjPropTarget;this.sliderPoint.selectionIndices[0]=Math.floor(100*currSliderDiff);return{slidedObj:soln}};Sketchpad.simulation.ValueSliderConstraint.dummy=function(x,y){return new Sketchpad.simulation.ValueSliderConstraint(Point.dummy(x,y),"x",0,100,{foo:0},"foo")};Sketchpad.simulation.VelocityConstraint=function Sketchpad__simulation__VelocityConstraint(body){this.body=body;this.position=body.position;this.velocity=body.velocity};sketchpad.addClass(Sketchpad.simulation.VelocityConstraint,true);Sketchpad.simulation.VelocityConstraint.prototype.propertyTypes={body:"FreeBody"};Sketchpad.simulation.VelocityConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return magnitude(minus(plus(this.lastPosition,scaledBy(this.velocity,dt)),this.position))};Sketchpad.simulation.VelocityConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return{position:plus(this.lastPosition,scaledBy(this.velocity,dt))}};Sketchpad.simulation.VelocityConstraint.description=function(){return"Sketchpad.simulation.VelocityConstraint(FreeBody Body) states for Body: Pos = old(Pos) + Velocity * (pseudoTime - prevPseudoTime) ."};Sketchpad.simulation.VelocityConstraint.prototype.description=function(){return"for Body "+this.body.__toString+" Pos = old(Pos) + ("+this.velocity.x+","+this.velocity.y+") * dt, where dt is the frame step time amount."};Sketchpad.simulation.VelocityConstraint.dummy=function(x,y){return new Sketchpad.simulation.VelocityConstraint(FreeBody.dummy(x,y))};Sketchpad.simulation.VelocityConstraint.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){this.lastPosition=scaledBy(this.position,1)};Sketchpad.simulation.VelocityConstraint.prototype.draw=function(canvas,origin){var ctxt=canvas.ctxt;var slopeV=Sketchpad.simulation.slopeVector(this.position,this.velocity);var len=50;var p=plus(this.position,{x:slopeV.x*len,y:slopeV.y*len});canvas.drawArrow(this.position,p,origin,"v")};Sketchpad.simulation.VelocityConstraint2=function Sketchpad__simulation__VelocityConstraint2(body,velocity){this.body=body;this.position=body.position;this.velocity=velocity};sketchpad.addClass(Sketchpad.simulation.VelocityConstraint2,true);Sketchpad.simulation.VelocityConstraint2.prototype.propertyTypes={body:"FreeBody",velocity:"PointVector"};Sketchpad.simulation.VelocityConstraint2.prototype.computeError=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return magnitude(minus(plus(this.lastPosition,scaledBy(this.velocity.magnitude(),dt)),this.position))};Sketchpad.simulation.VelocityConstraint2.prototype.solve=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return{position:plus(this.lastPosition,scaledBy(this.velocity.magnitude(),dt))}};Sketchpad.simulation.VelocityConstraint2.description=function(){return"Sketchpad.simulation.VelocityConstraint2(FreeBody Body, PointVector Velocity) states for Body: Pos = old(Pos) + Velocity * (pseudoTime - prevPseudoTime) ."};Sketchpad.simulation.VelocityConstraint2.prototype.description=function(){return"for Body "+this.body.__toString+": Pos = old(Pos) + (vector "+this.velocity.__toString+") * dt, where dt is the frame step time amount ."};Sketchpad.simulation.VelocityConstraint2.dummy=function(x,y){return new Sketchpad.simulation.VelocityConstraint2(FreeBody.dummy(x,y),PointVector.dummy(x,y))};Sketchpad.simulation.VelocityConstraint2.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){this.lastPosition=scaledBy(this.position,1)};Sketchpad.simulation.AccelerationConstraint=function Sketchpad__simulation__AccelerationConstraint(body,acceleration){this.body=body;this.velocity=body.velocity;this.acceleration=acceleration};sketchpad.addClass(Sketchpad.simulation.AccelerationConstraint,true);Sketchpad.simulation.AccelerationConstraint.prototype.propertyTypes={body:"FreeBody",acceleration:"Vector"};Sketchpad.simulation.AccelerationConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return magnitude(minus(plus(this.lastVelocity,scaledBy(this.acceleration,dt)),this.velocity))};Sketchpad.simulation.AccelerationConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return{velocity:plus(this.lastVelocity,scaledBy(this.acceleration,dt))}};Sketchpad.simulation.AccelerationConstraint.description=function(){return"Sketchpad.simulation.AccelerationConstraint(FreeBody Body, Vector Acceleration) states for Body: Velocity = old(Velocity) + Acceleration * (pseudoTime - prevPseudoTime) ."};Sketchpad.simulation.AccelerationConstraint.prototype.description=function(){return"for Body "+this.body.__toString+": Velocity = old(Velocity) + ("+this.acceleration.x+","+this.acceleration.y+") * dt, where dt is the frame step time amount ."};Sketchpad.simulation.AccelerationConstraint.dummy=function(x,y){return new Sketchpad.simulation.AccelerationConstraint(FreeBody.dummy(x,y),Sketchpad.geom.Vector.dummy(x+50,y+50))};Sketchpad.simulation.AccelerationConstraint.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){this.lastVelocity=scaledBy(this.velocity,1)};Sketchpad.simulation.AirResistanceConstraint=function Sketchpad__simulation__AirResistanceConstraint(body,scale){this.body=body;this.velocity=body.velocity;this.scale=-scale};sketchpad.addClass(Sketchpad.simulation.AirResistanceConstraint,true);Sketchpad.simulation.AirResistanceConstraint.prototype.propertyTypes={scale:"Number",velocity:"Vector"};Sketchpad.simulation.AirResistanceConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return magnitude(minus(scaledBy(this.lastVelocity,this.scale),this.velocity))};Sketchpad.simulation.AirResistanceConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{velocity:scaledBy(this.lastVelocity,this.scale)}};Sketchpad.simulation.AirResistanceConstraint.description=function(){return"Sketchpad.simulation.AirResistanceConstraint(FreeBody Body) states for Body: Velocity = old(Velocity) * Scale ."};Sketchpad.simulation.AirResistanceConstraint.prototype.description=function(){return"for Body "+this.body.__toString+": Velocity = old(Velocity) * "+this.scale+" ."};Sketchpad.simulation.AirResistanceConstraint.dummy=function(x,y){return new Sketchpad.simulation.AirResistanceConstraint(Sketchpad.geom.Vector.dummy(x,y),.1)};Sketchpad.simulation.AirResistanceConstraint.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){this.lastVelocity=scaledBy(this.velocity,1)};Sketchpad.simulation.BounceConstraint=function Sketchpad__simulation__BounceConstraint(body,surfaceP1,surfaceP2){this.body=body;this.halfLength=body.radius;this.position=body.position;this.velocity=body.velocity;this.surfaceP1=surfaceP1;this.surfaceP2=surfaceP2};sketchpad.addClass(Sketchpad.simulation.BounceConstraint,true);Sketchpad.simulation.BounceConstraint.prototype.propertyTypes={body:"FreeBody",surfaceP1:"Point",surfaceP2:"Point"};Sketchpad.simulation.BounceConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return 0};Sketchpad.simulation.BounceConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{}};Sketchpad.simulation.BounceConstraint.description=function(){return"Sketchpad.simulation.BounceConstraint(FreeBody Body, Point End1, Point End2) states that the Body with diameter L and position Pos and velocity vector Vel is going to bounce off the line with two end points End1 & End2."};Sketchpad.simulation.BounceConstraint.prototype.description=function(){return"Body "+this.body.__toString+" with diameter L and position Pos and velocity vector Vel is going to bounce off the line with two end points "+this.surfaceP1.__toString+" & "+this.surfaceP2.__toString+"."};Sketchpad.simulation.BounceConstraint.dummy=function(x,y){return new Sketchpad.simulation.BounceConstraint(FreeBody.dummy(x,y),Point.dummy(x,y),Point.dummy(x,y))};Sketchpad.simulation.BounceConstraint.prototype.proposeNextPseudoTime=function(pseudoTime){var res=pseudoTime+Sketchpad.simulation.computeContact(this.halfLength,this.position,this.velocity,this.surfaceP1,this.surfaceP2);this.tcontact=res;return res};Sketchpad.simulation.BounceConstraint.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){var position=this.position;var velocity=this.velocity;var surfaceP1=this.surfaceP1;var surfaceP2=this.surfaceP2;if(this.tcontact==pseudoTime){this.tcontact=undefined;var dt=pseudoTime-prevPseudoTime;var slope=(surfaceP2.y-surfaceP1.y)/(surfaceP2.x-surfaceP1.x);var surfaceHitPosX=surfaceP2.y==surfaceP1.y?position.x:(position.y-surfaceP1.y)/slope+surfaceP1.x;var surfaceHitPosY=surfaceP2.x==surfaceP1.x?position.y:(position.x-surfaceP1.x)*slope+surfaceP1.y;var surfaceAngle=Sketchpad.simulation.angle(surfaceP1,surfaceP2);var velocityAngle=Sketchpad.simulation.angle({x:0,y:0},velocity);var reflectionAngle=surfaceAngle-velocityAngle;var velocityMagnitude=Math.sqrt(velocity.x*velocity.x+velocity.y*velocity.y);var angleC=Math.cos(reflectionAngle);var angleS=Math.sin(reflectionAngle);var x=angleC*velocityMagnitude*1;var y=angleS*velocityMagnitude*-1;this.bounceVelocity=scaledBy({x:x,y:y},1);var slopeV=Sketchpad.simulation.slopeVectorWrong(surfaceP1,surfaceP2);var deltaPosX=slopeV.x*velocityMagnitude*dt;var deltaPosY=slopeV.y*-velocityMagnitude*dt;this.bouncePosition={x:position.x+deltaPosX,y:position.y+deltaPosY};velocity.x=this.bounceVelocity.x;velocity.y=this.bounceVelocity.y;position.x=this.bouncePosition.x;position.y=this.bouncePosition.y}else this.contact=false};Sketchpad.simulation.HitSurfaceConstraint=function Sketchpad__simulation__HitSurfaceConstraint(body,surfaceP1,surfaceP2){this.body=body;this.halfLength=body.radius/2;this.position=body.position;this.velocity=body.velocity;this.surfaceP1=surfaceP1;this.surfaceP2=surfaceP2};sketchpad.addClass(Sketchpad.simulation.HitSurfaceConstraint,true);Sketchpad.simulation.HitSurfaceConstraint.prototype.propertyTypes={body:"FreeBody",surfaceP1:"Point",surfaceP2:"Point"};Sketchpad.simulation.HitSurfaceConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return this.contact?magnitude(minus(this.hitVelocity,this.velocity))+magnitude(minus(this.hitPosition,this.position)):0};Sketchpad.simulation.HitSurfaceConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{velocity:this.hitVelocity,position:this.hitPosition}};Sketchpad.simulation.HitSurfaceConstraint.description=function(){return"Sketchpad.simulation.HitSurfaceConstraint(FreeBody Body, Point End1, Point End2) states that the Body with diameter L and position Pos and velocity vector Vel is going to land and stay on the line with two end points End1 & End2."};Sketchpad.simulation.HitSurfaceConstraint.prototype.description=function(){return"Body "+this.body.__toString+" with diameter L and position Pos and velocity vector Vel is going to land and stay on the line with two end points "+this.surfaceP1.__toString+" & "+this.surfaceP2.__toString+"."};Sketchpad.simulation.HitSurfaceConstraint.dummy=function(x,y){return new Sketchpad.simulation.HitSurfaceConstraint(FreeBody.dummy(x,y),Point.dummy(x,y),Point.dummy(x,y))};Sketchpad.simulation.HitSurfaceConstraint.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){var position=this.position;var velocity=this.velocity;var surfaceP1=this.surfaceP1;var surfaceP2=this.surfaceP2;if(Sketchpad.simulation.detectContact(this.halfLength,position,velocity,surfaceP1,surfaceP2)){this.contact=true;var dt=pseudoTime-prevPseudoTime;var slopeV=Sketchpad.simulation.slopeVectorWrong(surfaceP1,surfaceP2);this.hitVelocity=scaledBy({x:0,y:-Sketchpad.simulation.g},dt);var velocityMagnitude=Math.sqrt(velocity.x*velocity.x+velocity.y*velocity.y);deltaPosX=slopeV.x*velocityMagnitude*dt;deltaPosY=slopeV.y*velocityMagnitude*dt;this.hitPosition={x:position.x+deltaPosX,y:position.y+deltaPosY}}else this.contact=false};Sketchpad.simulation.ConveyorBeltConstraint=function Sketchpad__simulation__ConveyorBeltConstraint(body,belt){this.body=body;this.halfLength=body.radius;this.position=body.position;this.velocity=body.velocity;this.belt=belt};sketchpad.addClass(Sketchpad.simulation.ConveyorBeltConstraint,true);Sketchpad.simulation.ConveyorBeltConstraint.prototype.propertyTypes={body:"FreeBody",belt:"Belt"};Sketchpad.simulation.ConveyorBeltConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return this.contact?magnitude(minus(this.targetVelocity,this.velocity)):0};Sketchpad.simulation.ConveyorBeltConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{velocity:this.targetVelocity}};Sketchpad.simulation.ConveyorBeltConstraint.description=function(){return"Sketchpad.simulation.ConveyorBeltConstraint(Number L, FreeBody Body, ConveyorBelt Belt) states that the body with diameter L and position Pos and velocity vector Vel is going to land and move based on the conveyor belt Belt's velocity."};Sketchpad.simulation.ConveyorBeltConstraint.prototype.description=function(){return"Body"+this.body.__toString+" with diameter L and position Pos and velocity vector Vel is going to land and move based on the conveyor belt Belt "+this.belt.__toString+"'s velocity."};Sketchpad.simulation.ConveyorBeltConstraint.dummy=function(x,y){return new Sketchpad.simulation.ConveyorBeltConstraint(FreeBody.dummy(x,y),Belt.dummy(x,y))};Sketchpad.simulation.ConveyorBeltConstraint.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){var velocity=this.velocity;var belt=this.belt;var beltP1=belt.position1;var beltP2=belt.position2;var beltSpeed=belt.speed;if(Sketchpad.simulation.detectContact(this.halfLength,this.position,velocity,beltP1,beltP2)){this.contact=true;var slopeV=Sketchpad.simulation.slopeVectorWrong(beltP1,beltP2);this.targetVelocity={x:velocity.x+slopeV.y*beltSpeed,y:velocity.y+slopeV.x*beltSpeed}}else this.contact=false};Sketchpad.simulation.NoOverlapConstraint=function Sketchpad__simulation__NoOverlapConstraint(body1,body2){this.body1=body1;this.length1=body1.radius/2;this.position1=body1.position;this.velocity1=body1.velocity;this.body2=body2;this.length2=body2.radius/2;this.position2=body2.position;this.velocity2=body2.velocity};sketchpad.addClass(Sketchpad.simulation.NoOverlapConstraint,true);Sketchpad.simulation.NoOverlapConstraint.prototype.propertyTypes={body1:"FreeBody",body2:"FreeBody"};Sketchpad.simulation.NoOverlapConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var length1=this.length1;var position1=this.position1;var velocity1=this.velocity1;var length2=this.length2;var position2=this.position2;var p1x=position1.x,p1y=position1.y;var p2x=position2.x,p2y=position2.y;return p1x>p2x-length2/2&&p1x<p2x+length2&&(p1y>p2y-length2/2&&p1y<p2y+length2)?1:0};Sketchpad.simulation.NoOverlapConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var length1=this.length1;var position1=this.position1;var velocity1=this.velocity1;var length2=this.length2;var position2=this.position2;var p1x=position1.x;var p2x=position2.x;var soln=p1x>p2x?{position2:{x:p1x-length2}}:{position1:{x:p2x-length1}};return soln};Sketchpad.simulation.NoOverlapConstraint.description=function(){return"Sketchpad.simulation.NoOverlapConstraint(FreeBody Body1, FreeBody Body1) states that the Body1 with diameter L1 and position Pos1 and velocity vector Vel1 and the Body2 with diameter L2 and position Pos2 and velocity vector Vel2 will push each other if touching."};Sketchpad.simulation.NoOverlapConstraint.prototype.description=function(){return"Body "+this.body1.__toString+" with diameter L1 and position Pos1 and velocity vector Vel1 and the Body "+this.body2.__toString+" with diameter L2 and position Pos2 and velocity vector Vel2 will push each other if touching."};Sketchpad.simulation.NoOverlapConstraint.dummy=function(x,y){return new Sketchpad.simulation.NoOverlapConstraint(FreeBody.dummy(x,y),FreeBody.dummy(x+100,y+100))};Sketchpad.simulation.SpringConstraint=function Sketchpad__simulation__SpringConstraint(body1,body2,spring){this.body1=body1;this.body2=body2;this.position1=body1.position;this.velocity1=body1.velocity;this.acceleration1=body1.acceleration;this.mass1=body1.mass;this.position2=body2.position;this.velocity2=body2.velocity;this.acceleration2=body2.acceleration;this.mass2=body2.mass;this.spring=spring;this._lastVelocities=[undefined,undefined]};sketchpad.addClass(Sketchpad.simulation.SpringConstraint,true);Sketchpad.simulation.SpringConstraint.prototype.propertyTypes={body1:"FreeBody",body2:"FreeBody",spring:"Spring"};Sketchpad.simulation.SpringConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var spring=this.spring;if(spring.torn){return 0}var positions=[this.position1,this.position2];var masses=[this.mass1,this.mass2];var velocities=[this.velocity1,this.velocity2];var accelerations=[this.acceleration1,this.acceleration2];var dt=pseudoTime-prevPseudoTime;var err=0;for(var i=0;i<=1;i++){var j=(i+1)%2;var mass=masses[j];if(mass>0){var currAcceleration=accelerations[j];var position1=positions[i];var position2=positions[j];var vector=minus(position2,position1);var springCurrLen=magnitude(vector);var stretchLen=springCurrLen-spring.length;var newAccelerationMag=spring.k*stretchLen/mass;var acc=scaledBy(normalized(vector),-newAccelerationMag);err+=magnitude(minus(acc,currAcceleration))}}return err};Sketchpad.simulation.SpringConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var soln={};var spring=this.spring;var positions=[this.position1,this.position2];var masses=[this.mass1,this.mass2];var velocities=[this.velocity1,this.velocity2];var accelerations=[this.acceleration1,this.acceleration2];for(var i=0;i<=1;i++){var j=(i+1)%2;var mass=masses[j];var acc,torn=false;if(mass>0){var position1=positions[i];var position2=positions[j];var vector=minus(position2,position1);var springCurrLen=magnitude(vector);var stretchLen=springCurrLen-spring.length;torn=stretchLen>spring.tearPointAmount;if(!torn){var newAccelerationMag=spring.k*stretchLen/mass;acc=scaledBy(normalized(vector),-newAccelerationMag)}}if(torn)soln["spring"]={torn:true};if(acc)soln["acceleration"+(j+1)]=acc}return soln};Sketchpad.simulation.SpringConstraint.description=function(){return"Sketchpad.simulation.SpringConstraint(FreeBody Body1, FreeBody Body2, Spring S) states that spring S has been attached to two bodies Body1 and Body2."};Sketchpad.simulation.SpringConstraint.prototype.description=function(){return"spring "+this.spring.__toString+" has been attached to two bodies "+this.body1.__toString+" and "+this.body2.__toString+"."};Sketchpad.simulation.SpringConstraint.dummy=function(x,y){return new Sketchpad.simulation.SpringConstraint(FreeBody.dummy(x,y),FreeBody.dummy(x+100,y+100),Sketchpad.simulation.Spring.dummy(x,y))};Sketchpad.simulation.OrbitalMotionConstraint=function Sketchpad__simulation__OrbitalMotionConstraint(sun,moon,distanceDownscale){this.sun=sun;this.moon=moon;this.acceleration=moon.acceleration;this.distanceDownscale=distanceDownscale||1e9/2};sketchpad.addClass(Sketchpad.simulation.OrbitalMotionConstraint,true);Sketchpad.simulation.OrbitalMotionConstraint.prototype.propertyTypes={sun:"FreeBody",moon:"FreeBody"};Sketchpad.simulation.OrbitalMotionConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){this._targetAcceleration=this.currentGravityAcceleration();return magnitude(minus(this._targetAcceleration,this.acceleration))};Sketchpad.simulation.OrbitalMotionConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{acceleration:this._targetAcceleration}};Sketchpad.simulation.OrbitalMotionConstraint.description=function(){return"Sketchpad.simulation.OrbitalMotionConstraint(FreeBody Sun, FreeBody Moon) states that Moon body is orbiting around Sun body according to simple orbital motion formula."};Sketchpad.simulation.OrbitalMotionConstraint.prototype.description=function(){return"Moon body "+this.moon.__toString+" is orbiting around Sun body "+this.sun.__toString+" according to simple orbital motion formula."};Sketchpad.simulation.OrbitalMotionConstraint.dummy=function(x,y){return new Sketchpad.simulation.OrbitalMotionConstraint(FreeBody.dummy(x,y),FreeBody.dummy(x+200,y))};Sketchpad.simulation.OrbitalMotionConstraint.prototype.currentGravityAcceleration=function(){var p1=this.moon.position,p2=this.sun.position;var dist0=distance(p1,p2);var dist=dist0*this.distanceDownscale;var aMag0=Sketchpad.simulation.G*this.sun.mass/(dist*dist);var aMag=aMag0/this.distanceDownscale;var slopeV=Sketchpad.simulation.slopeVector(p1,p2);return{x:slopeV.x*aMag,y:slopeV.y*aMag}}}module.exports.install=installSimulationConstraints},{}],4:[function(require,module,exports){function install3DGeometricConstraints(Sketchpad){Sketchpad.geom3d={};var square=Sketchpad.geom.square;function plus(p1,p2){return{x:p1.x+p2.x,y:p1.y+p2.y,z:p1.z+p2.z}}function minus(p1,p2){return{x:p1.x-p2.x,y:p1.y-p2.y,z:p1.z-p2.z}}function scaledBy(p,m){return{x:p.x*m,y:p.y*m,z:p.z*m}}function copy(p){return scaledBy(p,1)}function midpoint(p1,p2){return scaledBy(plus(p1,p2),.5)}function magnitude(p){return Math.sqrt(square(p.x)+square(p.y)+square(p.z))}function normalized(p){var m=magnitude(p);return m>0?scaledBy(p,1/m):p}function distance(p1,p2){return Math.sqrt(square(p1.x-p2.x)+square(p1.y-p2.y)+square(p1.z-p2.z))}function rotatedBy(p,dTheta){var c=Math.cos(dTheta);var s=Math.sin(dTheta);return{x:c*p.x-s*p.y,y:s*p.x+c*p.y,z:p.z}}function rotatedAround(p,dTheta,axis){return plus(axis,rotatedBy(minus(p,axis),dTheta))}function setDelta(d,p,scale){d.x=p.x*scale;d.y=p.y*scale;d.z=p.z*scale}function dotProduct(v1,v2){return v1.x*v2.x+v1.y*v2.y+v1.z*v2.z}function crossProduct(v1,v2){var a=new THREE.Vector3(v1.x,v1.y,v1.z);var b=new THREE.Vector3(v2.x,v2.y,v2.z);var c=new THREE.Vector3;c.crossVectors(a,b);return new Point3D(c.x,c.y,c.z)}function angle(v1,v2,axis){var v1m=Sketchpad.geom3d.magnitude(v1),v2m=Sketchpad.geom3d.magnitude(v2);var prod2=v1m*v2m;if(prod2==0)langle=0;else{var prod1=dotProduct(v1,v2);var div=Math.min(1,prod1/prod2);langle=Math.acos(div);var cross=crossProduct(v1,v2);var dot=dotProduct(axis,cross);if(dot>0)langle=-langle}return langle}Sketchpad.geom3d.plus=plus;Sketchpad.geom3d.minus=minus;Sketchpad.geom3d.scaledBy=scaledBy;Sketchpad.geom3d.copy=copy;Sketchpad.geom3d.midpoint=midpoint;Sketchpad.geom3d.magnitude=magnitude;Sketchpad.geom3d.normalized=normalized;Sketchpad.geom3d.distance=distance;Sketchpad.geom3d.rotatedBy=rotatedBy;Sketchpad.geom3d.angle=angle;Sketchpad.geom3d.dotProduct=dotProduct;Sketchpad.geom3d.crossProduct=crossProduct;Sketchpad.geom3d.rotatedAround=rotatedAround;Sketchpad.geom3d.setDelta=setDelta;Sketchpad.geom3d.CoordinateConstraint=function Sketchpad__geom3__CoordinateConstraint(p,x,y,z){this.p=p;this.c=new Point3D(x,y,z)};sketchpad.addClass(Sketchpad.geom3d.CoordinateConstraint,true);Sketchpad.geom3d.CoordinateConstraint.prototype.propertyTypes={p:"Point3D",c:"Point3D"};Sketchpad.geom3d.CoordinateConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return magnitude(minus(this.c,this.p))};Sketchpad.geom3d.CoordinateConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{p:{x:this.c.x,y:this.c.y,z:this.c.z}}};Sketchpad.geom3d.CoordinateConstraint.description=function(){return"Sketchpad.geom3d.CoordinateConstraint(Point P, Number X, Number Y, Number Z) states that point P should stay at coordinate (X, Y, Z)."};Sketchpad.geom3d.CoordinateConstraint.prototype.description=function(){return"point "+this.p.__toString+" should stay at coordinate ("+this.c.x+", "+this.c.y+", "+this.c.z+")."};Sketchpad.geom3d.CoordinateConstraint.prototype.effects=function(){return[{obj:this.p,props:["x","y","z"]}]};Sketchpad.geom3d.LengthConstraint=function Sketchpad__geom3d__LengthConstraint(p1,p2,l){this.p1=p1;this.p2=p2;this.l=l};sketchpad.addClass(Sketchpad.geom3d.LengthConstraint,true);Sketchpad.geom3d.LengthConstraint.prototype.propertyTypes={p1:"Point3D",p2:"Point3D",l:"Number"};Sketchpad.geom3d.LengthConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var l12=magnitude(minus(this.p1,this.p2));return l12-this.l};Sketchpad.geom3d.LengthConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var p1=this.p1,p2=this.p2;var l12=magnitude(minus(p1,p2));if(l12==0){p1=plus(p1,{x:.1,y:0,z:0});p2=plus(p2,{x:-.1,y:0,z:0})}var delta=(l12-this.l)/2;var e12=scaledBy(Sketchpad.geom3d.normalized(minus(p2,p1)),delta);return{p1:plus(this.p1,e12),p2:plus(this.p2,scaledBy(e12,-1))}};Sketchpad.geom3d.LengthConstraint.description=function(){return"Sketchpad.geom3d.LengthConstraint(Point3D P1, Point3D P2, Number L) says points P1 and P2 always maintain a distance of L."};Sketchpad.geom3d.LengthConstraint.prototype.description=function(){return"points "+this.p1.__toString+" and "+this.p2.__toString+" always maintain a distance of "+this.l+"."};Sketchpad.geom3d.LengthConstraint.prototype.effects=function(){return[{obj:this.p1,props:["x","y","z"]},{obj:this.p2,props:["x","y","z"]}]};Sketchpad.geom3d.MotorConstraint=function Sketchpad__geom__MotorConstraint(p1,p2,w){this.p1=p1;this.p2=p2;this.w=w};sketchpad.addClass(Sketchpad.geom3d.MotorConstraint,true);Sketchpad.geom3d.MotorConstraint.prototype.propertyTypes={p1:"Point",p2:"Point",w:"Number"};Sketchpad.geom3d.MotorConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return 1};Sketchpad.geom3d.MotorConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var t=(pseudoTime-prevPseudoTime)/1e3;var dTheta=t*this.w*(2*Math.PI);var m12=midpoint(this.p1,this.p2);return{p1:rotatedAround(this.p1,dTheta,m12),p2:rotatedAround(this.p2,dTheta,m12)}};Sketchpad.geom3d.MotorConstraint.description=function(){return"Sketchpad.geom3d.MotorConstraint(Point P1, Point P2, Number W) causes P1 and P2 to orbit their midpoint at the given rate of w, in units of Hz: whole rotations per second."};Sketchpad.geom3d.MotorConstraint.prototype.description=function(){return""+this.p1.__toString+" and "+this.p2.__toString+" to orbit their midpoint at the given rate of "+this.w+", in units of Hz: whole rotations per second."}}module.exports.install=install3DGeometricConstraints
},{}],5:[function(require,module,exports){function install3DSimulationConstraints(Sketchpad){Sketchpad.simulation3d={g:9.8,G:6.7e-11};var minus=Sketchpad.geom3d.minus;var plus=Sketchpad.geom3d.plus;var scaledBy=Sketchpad.geom3d.scaledBy;var magnitude=Sketchpad.geom3d.magnitude;var normalized=Sketchpad.geom3d.normalized;var distance=Sketchpad.geom3d.distance;var angle=Sketchpad.geom3d.angle;Sketchpad.simulation3d.FreeBody=function Sketchpad__simulation3d__FreeBody(position,optRadius,optDrawnRadius,optMass,optColor){this.position=position;this.mass=optMass||10;this.velocity=new Vector3D(0,0,0);this.acceleration=new Vector3D(0,0,0);this.radius=optRadius||this.position.radius;this.drawnRadius=optDrawnRadius||this.radius;rc.add(new Sphere(position,optColor,this.drawnRadius))};sketchpad.addClass(Sketchpad.simulation3d.FreeBody);Sketchpad.simulation3d.FreeBody.prototype.propertyTypes={position:"Point3D",mass:"Number",radius:"Number"};Sketchpad.simulation3d.Spring=function Sketchpad__simulation3d__Spring(body1,body2,k,length,tearPointAmount,optColor){this.body1=body1;this.body1=body2;this.line=rc.add(new Cylinder(body1.position,body2.position,optColor));this.k=k;this.length=length;this.tearPointAmount=tearPointAmount;this.torn=false};sketchpad.addClass(Sketchpad.simulation3d.Spring);Sketchpad.simulation3d.Spring.prototype.propertyTypes={body1:"FreeBody",body2:"FreeBody",k:"Number",length:"Number",teatPointAmount:"Number"};Sketchpad.simulation3d.Spring.prototype.solutionJoins=function(){return{torn:rc.sketchpad.lastOneWinsJoinSolutions}};Sketchpad.simulation3d.Spring.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){if(this.line){if(this.torn){rc.remove(this.line);this.line=undefined}else{var height=this.line.getHeight(),length=this.length;var stretch=Math.abs(height-length)/length;var color=this.line._sceneObj.material.color;color.set("gray");color.r+=stretch}}};Sketchpad.simulation3d.VelocityConstraint=function Sketchpad__simulation3d__VelocityConstraint(body){this.body=body;this.position=body.position;this.velocity=body.velocity};sketchpad.addClass(Sketchpad.simulation3d.VelocityConstraint,true);Sketchpad.simulation3d.VelocityConstraint.prototype.propertyTypes={body:"FreeBody"};Sketchpad.simulation3d.VelocityConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return magnitude(minus(plus(this.lastPosition,scaledBy(this.velocity,dt)),this.position))};Sketchpad.simulation3d.VelocityConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return{position:plus(this.lastPosition,scaledBy(this.velocity,dt))}};Sketchpad.simulation3d.VelocityConstraint.description=function(){return"Sketchpad.simulation3d.VelocityConstraint(FreeBody Body) states for Body: Pos = old(Pos) + Velocity * (pseudoTime - prevPseudoTime) ."};Sketchpad.simulation3d.VelocityConstraint.prototype.description=function(){return"for Body "+this.body.__toString+" Pos = old(Pos) + ("+this.velocity.x+","+this.velocity.y+","+this.velocity.z+") * dt, where dt is the frame step time amount ."};Sketchpad.simulation3d.VelocityConstraint.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){this.lastPosition=scaledBy(this.position,1)};Sketchpad.simulation3d.VelocityConstraint2=function Sketchpad__simulation3d__VelocityConstraint2(body,velocity){this.body=body;this.position=body.position;this.velocity=velocity};sketchpad.addClass(Sketchpad.simulation3d.VelocityConstraint2,true);Sketchpad.simulation3d.VelocityConstraint2.prototype.propertyTypes={body:"FreeBody",velocity:"Point"};Sketchpad.simulation3d.VelocityConstraint2.prototype.computeError=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return magnitude(minus(plus(this.lastPosition,scaledBy(this.velocity.magnitude(),dt)),this.position))};Sketchpad.simulation3d.VelocityConstraint2.prototype.solve=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return{position:plus(this.lastPosition,scaledBy(this.velocity.magnitude(),dt))}};Sketchpad.simulation3d.VelocityConstraint2.description=function(){return"Sketchpad.simulation3d.VelocityConstraint2(FreeBody Body, PointVector3D Velocity) states for Body: Pos = old(Pos) + Velocity * (pseudoTime - prevPseudoTime) ."};Sketchpad.simulation3d.VelocityConstraint2.prototype.description=function(){return"for Body "+this.body.__toString+": Pos = old(Pos) + ("+this.velocity.x+","+this.velocity.y+","+this.velocity.z+") * dt, where dt is the frame step time amount ."};Sketchpad.simulation3d.VelocityConstraint2.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){this.lastPosition=scaledBy(this.position,1)};Sketchpad.simulation3d.AccelerationConstraint=function Sketchpad__simulation3d__AccelerationConstraint(body,acceleration){this.body=body;this.velocity=body.velocity;this.acceleration=acceleration};sketchpad.addClass(Sketchpad.simulation3d.AccelerationConstraint,true);Sketchpad.simulation3d.AccelerationConstraint.prototype.propertyTypes={body:"FreeBody",velocity:"Vector3D"};Sketchpad.simulation3d.AccelerationConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return magnitude(minus(plus(this.lastVelocity,scaledBy(this.acceleration,dt)),this.velocity))};Sketchpad.simulation3d.AccelerationConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var dt=pseudoTime-prevPseudoTime;return{velocity:plus(this.lastVelocity,scaledBy(this.acceleration,dt))}};Sketchpad.simulation3d.AccelerationConstraint.description=function(){return"Sketchpad.simulation3d.AccelerationConstraint(FreeBody Body, Vector Acceleration) states for Body: Velocity = old(Velocity) + Acceleration * (pseudoTime - prevPseudoTime) ."};Sketchpad.simulation3d.AccelerationConstraint.prototype.description=function(){return"for Body "+this.body.__toString+": Velocity = old(Velocity) + ("+this.acceleration.x+","+this.acceleration.y+","+this.acceleration.z+") * dt, where dt is the frame step time amount ."};Sketchpad.simulation3d.AccelerationConstraint.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){this.lastVelocity=scaledBy(this.velocity,1)};Sketchpad.simulation3d.AirResistanceConstraint=function Sketchpad__simulation3d__AirResistanceConstraint(body,scale){this.body=body;this.velocity=body.velocity;this.scale=-scale};sketchpad.addClass(Sketchpad.simulation3d.AirResistanceConstraint,true);Sketchpad.simulation3d.AirResistanceConstraint.prototype.propertyTypes={scale:"Number",body:"FreeBody"};Sketchpad.simulation3d.AirResistanceConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){return magnitude(minus(scaledBy(this.lastVelocity,this.scale),this.velocity))};Sketchpad.simulation3d.AirResistanceConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{velocity:scaledBy(this.lastVelocity,this.scale)}};Sketchpad.simulation3d.AirResistanceConstraint.description=function(){return"Sketchpad.simulation3d.AirResistanceConstraint(FreeBody Body, Number Scale) states for Body: Velocity = old(Velocity) * Scale ."};Sketchpad.simulation3d.AirResistanceConstraint.prototype.description=function(){return"for Body "+this.body.__toString+": Velocity = old(Velocity) * "+this.scale+" ."};Sketchpad.simulation3d.AirResistanceConstraint.prototype.onEachTimeStep=function(pseudoTime,prevPseudoTime){this.lastVelocity=scaledBy(this.velocity,1)};Sketchpad.simulation3d.SpringConstraint=function Sketchpad__simulation3d__SpringConstraint(body1,body2,spring){this.body1=body1;this.body2=body2;this.position1=body1.position;this.velocity1=body1.velocity;this.acceleration1=body1.acceleration;this.mass1=body1.mass;this.position2=body2.position;this.velocity2=body2.velocity;this.acceleration2=body2.acceleration;this.mass2=body2.mass;this.spring=spring;this._lastVelocities=[undefined,undefined]};sketchpad.addClass(Sketchpad.simulation3d.SpringConstraint,true);Sketchpad.simulation3d.SpringConstraint.prototype.propertyTypes={body1:"FreeBody",body2:"FreeBody",spring:"Spring"};Sketchpad.simulation3d.SpringConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){var spring=this.spring;if(spring.torn){return 0}var positions=[this.position1,this.position2];var masses=[this.mass1,this.mass2];var velocities=[this.velocity1,this.velocity2];var accelerations=[this.acceleration1,this.acceleration2];var err=0;for(var i=0;i<=1;i++){var j=(i+1)%2;var mass=masses[j];if(mass>0){var currAcceleration=accelerations[j];var position1=positions[i];var position2=positions[j];var vector=minus(position2,position1);var springCurrLen=magnitude(vector);var stretchLen=springCurrLen-spring.length;var newAccelerationMag=spring.k*stretchLen/mass;var acc=scaledBy(normalized(vector),-newAccelerationMag);err+=magnitude(minus(acc,currAcceleration))}}return err};Sketchpad.simulation3d.SpringConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){var soln={};var spring=this.spring;var positions=[this.position1,this.position2];var masses=[this.mass1,this.mass2];var velocities=[this.velocity1,this.velocity2];var accelerations=[this.acceleration1,this.acceleration2];for(var i=0;i<=1;i++){var j=(i+1)%2;var mass=masses[j];var acc,torn=false;if(mass>0){var acceleration=accelerations[j];var position1=positions[i];var position2=positions[j];var vector=minus(position2,position1);var springCurrLen=magnitude(vector);var stretchLen=springCurrLen-spring.length;torn=stretchLen>spring.tearPointAmount;if(!torn){var newAccelerationMag=spring.k*stretchLen/mass;acc=scaledBy(normalized(vector),-newAccelerationMag)}}if(torn)soln["spring"]={torn:true};if(acc)soln["acceleration"+(j+1)]=acc}return soln};Sketchpad.simulation3d.SpringConstraint.description=function(){return"Sketchpad.simulation3d.SpringConstraint(FreeBody Body1, FreeBody Body2, Spring S) states that spring S has been attached to two bodies Body1 and Body2."};Sketchpad.simulation3d.SpringConstraint.prototype.description=function(){return"spring "+this.spring.__toString+" has been attached to two bodies "+this.body1.__toString+" and "+this.body2.__toString+"."};Sketchpad.simulation3d.OrbitalMotionConstraint=function Sketchpad__simulation3d__OrbitalMotionConstraint(sun,moon,distanceDownscale){this.sun=sun;this.moon=moon;this.acceleration=moon.acceleration;this.distanceDownscale=distanceDownscale||1e9/2};sketchpad.addClass(Sketchpad.simulation3d.OrbitalMotionConstraint,true);Sketchpad.simulation3d.OrbitalMotionConstraint.prototype.propertyTypes={sun:"FreeBody",moon:"FreeBody"};Sketchpad.simulation3d.OrbitalMotionConstraint.prototype.computeError=function(pseudoTime,prevPseudoTime){this._targetAcceleration=this.currentGravityAcceleration();return magnitude(minus(this._targetAcceleration,this.acceleration))};Sketchpad.simulation3d.OrbitalMotionConstraint.prototype.solve=function(pseudoTime,prevPseudoTime){return{acceleration:this._targetAcceleration}};Sketchpad.simulation3d.OrbitalMotionConstraint.description=function(){return"Sketchpad.simulation3d.OrbitalMotionConstraint(FreeBody Sun, FreeBody Moon) states that Moon body is orbiting around Sun body according to simple orbital motion formula."};Sketchpad.simulation3d.OrbitalMotionConstraint.prototype.description=function(){return"Moon body "+this.moon.__toString+" is orbiting around Sun body "+this.sun.__toString+" according to simple orbital motion formula."};Sketchpad.simulation3d.OrbitalMotionConstraint.prototype.currentGravityAcceleration=function(){var p1=this.moon.position,p2=this.sun.position;var dist0=distance(p1,p2);var dist=dist0*this.distanceDownscale;var aMag0=Sketchpad.simulation3d.G*this.sun.mass/(dist*dist);var aMag=aMag0/this.distanceDownscale;var slopeV=Sketchpad.simulation.slopeVector({x:p1.x,y:p1.z},{x:p2.x,y:p2.z});return{x:slopeV.x*aMag,y:0,z:slopeV.y*aMag}}}module.exports.install=install3DSimulationConstraints},{}],6:[function(require,module,exports){var installArithmeticConstraints=require("./2d/arithmetic-constraints.js").install;var installGeometricConstraints=require("./2d/geometric-constraints.js").install;var installSimulationConstraints=require("./2d/simulation-constraints.js").install;var install3DGeometricConstraints=require("./3d/geometric-constraints.js").install;var install3DSimulationConstraints=require("./3d/simulation-constraints.js").install;var __idCtr=1;Object.defineProperty(Object.prototype,"__id",{get:function(){if(!this.hasOwnProperty("___id"))this.___id=__idCtr++;return this.___id}});Object.defineProperty(Object.prototype,"__type",{get:function(){if(!this.hasOwnProperty("___type"))this.___type=this.constructor.name.replace(/__/g,".");return this.___type}});Object.defineProperty(Object.prototype,"__shortType",{get:function(){var res=this.__type;return res.substring(res.lastIndexOf(".")+1)}});Object.defineProperty(Object.prototype,"__toString",{get:function(){return this.__shortType+"@"+this.__id}});Object.defineProperty(Object.prototype,"__container",{get:function(){if(!this.hasOwnProperty("___container"))this.___container=rc;return this.___container}});Object.defineProperty(Object.prototype,"__scratch",{get:function(){if(!this.hasOwnProperty("___scratch"))this.___scratch={};return this.___scratch}});function Sketchpad(){this.rho=1;this.epsilon=.01;this.numberOfSameErrorOcurrToBeConsideredConvergence=20;this.debug=false;this.solveEvenWithoutError=false;this.solveEvenWithoutErrorOnPriorityDifferences=false;this.constraints=[];this.constraintTreeList={};this.disabledConstraints={};this.thingConstructors={};this.constraintConstructors={};this.objMap={};this.perThingPerPropEffectingConstraints={};this.eventHandlers=[];this.eventHandlersInternal={};this.eventDescriptions={};this.onEachTimeStepHandlerDescriptions={};this.events=[];this.thingsWithOnEachTimeStepFn=[];this.thingsWithAfterEachTimeStepFn=[];this.startTime=Date.now();this.pseudoTime=0;this.prevPseudoTime=0;this.scratch={}}Sketchpad.prototype.addClass=function(aClass,isConstraint){var className=aClass.name.replace(/__/g,".");var list=isConstraint?this.constraintConstructors:this.thingConstructors;list[className]=aClass;aClass.prototype.__isSketchpadThing=true;aClass.prototype.__isConstraint=isConstraint};Sketchpad.prototype.markObjectWithIdIfNew=function(obj){var id=obj.__id;if(this.objMap[id])return true;this.objMap[id]=obj;return false};Sketchpad.prototype.getObject=function(id){return this.objMap[id]};Sketchpad.prototype.addConstraint=function(constraint,wasDisabled){if(constraint.__priority===undefined)constraint.__priority=1;var prio=constraint.__priority;var addIdx=0;while(addIdx<this.constraints.length&&this.constraints[addIdx].__priority<prio)addIdx++;if(this.solveEvenWithoutErrorOnPriorityDifferences){this.addToPerThingPerPropertyEffectorsForConstraint(constraint,this.perThingPerPropEffectingConstraints);this.computeConstraintsCompetingWithALowerPriorityOneForConstraint(constraint);if(this.debug)log(this.perThingPerPropEffectingConstraints)}this.constraints.splice(addIdx,0,constraint);if(wasDisabled)delete this.disabledConstraints[constraint.__id];else{var cTp=constraint.__type;if(!this.constraintTreeList[cTp])this.constraintTreeList[cTp]=[];this.constraintTreeList[cTp].push(constraint)}for(var p in constraint){if(constraint.hasOwnProperty(p)){var obj=constraint[p];if(obj!==undefined&&!this.objMap[obj.__id])this.objMap[obj.__id]=obj}}return constraint};Sketchpad.prototype.removeConstraint=function(unwantedConstraint,markAsDisabled){var self=this;var removed=[unwantedConstraint];this.constraints=this.constraints.filter(function(constraint){var keep=true;if(constraint===unwantedConstraint){keep=false}else{keep=!involves(constraint,unwantedConstraint);if(!keep)removed.push(constraint)}return keep});var tree=this.constraintTreeList;removed.forEach(function(constraint){if(markAsDisabled){self.disabledConstraints[constraint.__id]=constraint}else{var list=tree[constraint.__type];list.splice(list.indexOf(constraint),1)}});if(this.solveEvenWithoutErrorOnPriorityDifferences)this.computePerThingPerPropertyEffectors()};Sketchpad.prototype.clear=function(){this.rho=1;this.epsilon=.01;this.searchOn=false;this.solveEvenWithoutError=false;this.solveEvenWithoutErrorOnPriorityDifferences=false;this.constraints=[];this.constraintTreeList={};this.disabledConstraints={};this.objMap={};this.eventHandlers=[];this.events=[];this.thingsWithOnEachTimeStepFn=[];this.thingsWithAfterEachTimeStepFn=[];this.perThingPerPropEffectingConstraints={};this.startTime=Date.now();this.pseudoTime=0;this.prevPseudoTime=0;this.scratch={};for(var name in this.eventHandlersInternal)this.eventHandlersInternal[name].forEach(function(handler){document.body.removeEventListener(name,handler)});this.eventHandlersInternal={};this.eventDescriptions={};this.converged=false;this.errorUnmovedCount=0;this.lastIterationError=undefined;this.onEachTimeStepHandlerDescriptions={}};Sketchpad.prototype.computeCurrentError=function(){var pseudoTime=this.pseudoTime;var prevPseudoTime=this.prevPseudoTime;var totalError=0;for(var idx=0;idx<this.constraints.length;idx++){var c=this.constraints[idx];var er=Math.abs(c.computeError(pseudoTime,prevPseudoTime));totalError+=er}return totalError};Sketchpad.prototype.collectPerConstraintSolutions=function(timeMillis,inFixPointProcess){var pseudoTime=this.pseudoTime;var prevPseudoTime=this.prevPseudoTime;var self=this;var allSolutions=[];var didSomething=false,localDidSomething=false,totalError=0;for(var idx=0;idx<this.constraints.length;idx++){var c=this.constraints[idx];var searchable=c.__searchable;if(inFixPointProcess&&searchable)continue;var er=Math.abs(c.computeError(pseudoTime,prevPseudoTime));totalError+=er;if(er>self.epsilon||this.solveEvenWithoutError||this.solveEvenWithoutErrorOnPriorityDifferences&&this.constraintIsCompetingWithALowerPriorityOne(c)){var solutions=c.solve(pseudoTime,prevPseudoTime);if(!(inFixPointProcess||searchable))solutions=[solutions];localDidSomething=true;allSolutions.push({constraint:c,solutions:solutions})}}if(localDidSomething){didSomething=true}else totalError=0;return{didSomething:didSomething,error:totalError,solutions:allSolutions}};Sketchpad.prototype.collectPerPropertySolutions=function(allSolutions){var self=this;var collectedSolutions={},seenPriorities={};allSolutions.forEach(function(d){collectPerPropertySolutionsAddSolution(self,d,collectedSolutions,seenPriorities)});return collectedSolutions};Sketchpad.prototype.doOneIteration=function(timeMillis){if(this.beforeEachIteration)this.beforeEachIteration();var res=this.collectPerConstraintSolutions(timeMillis,true);if(this.debug)log(res);var didSomething=res.didSomething;var totalError=res.error;if(didSomething){var allSolutions=res.solutions;var collectedSolutions=this.collectPerPropertySolutions(allSolutions);if(this.unrollOnConflicts)applySolutionsWithUnrollOnConflict(this,collectedSolutions);else applySolutions(this,collectedSolutions)}return totalError};Sketchpad.prototype.computePerThingPerPropertyEffectors=function(){var res={};this.constraints.forEach(function(c){this.addToPerThingPerPropertyEffectorsForConstraint(c,res)}.bind(this));this.perThingPerPropEffectingConstraints=res;this.computeConstraintsCompetingWithALowerPriorityOne()};Sketchpad.prototype.addToPerThingPerPropertyEffectorsForConstraint=function(c,res){if(c.effects){c.effects().forEach(function(e){var id=e.obj.__id;var eProps=e.props;var props,cs;if(res[id])props=res[id];else{props={};res[id]=props}eProps.forEach(function(prop){if(props[prop])cs=props[prop];else{cs=[];props[prop]=cs}cs.push(c)})})}};Sketchpad.prototype.constraintIsCompetingWithALowerPriorityOne=function(constraint){return this.computeConstraintsCompetingWithALowerPriorityOne[constraint.__id]!==undefined};Sketchpad.prototype.computeConstraintsCompetingWithALowerPriorityOneForConstraint=function(constraint){for(var id in this.perThingPerPropEffectingConstraints){var thingEffs=this.perThingPerPropEffectingConstraints[id];for(var p in thingEffs){var cs=thingEffs[p];if(cs.indexOf(constraint)>=0){for(var i=0;i<cs.length;i++){var c=cs[i];if(c!==constraint&&c.__priority!==constraint.__priority){var hC=constraint.__priority>c.__priority?constraint:c;this.computeConstraintsCompetingWithALowerPriorityOne[hC.__id]=true;return}}}}}};Sketchpad.prototype.computeConstraintsCompetingWithALowerPriorityOne=function(){this.constraints.forEach(function(constraint){this.computeConstraintsCompetingWithALowerPriorityOneForConstraint(constraint)}.bind(this))};Sketchpad.prototype.currentTime=function(){return Date.now()-this.startTime};Sketchpad.prototype.doTasksOnEachTimeStep=function(pseudoTime,prevPseudoTime){this.handleEvents();this.doOnEachTimeStepFns(pseudoTime,prevPseudoTime);if(this.onEachTimeStep)this.onEachTimeStep(pseudoTime,prevPseudoTime)};Sketchpad.prototype.doTasksAfterEachTimeStep=function(pseudoTime,prevPseudoTime){this.doAfterEachTimeStepFns(pseudoTime,prevPseudoTime);if(this.afterEachTimeStep)this.afterEachTimeStep(pseudoTime,prevPseudoTime);this.maybeStepPseudoTime()};Sketchpad.prototype.computeNextPseudoTimeFromProposals=function(pseudoTime,proposals){var res=proposals[0].time;for(var i=1;i<proposals.length;i++){time=proposals[i].time;if(time<res)res=time}return res};Sketchpad.prototype.maybeStepPseudoTime=function(){var o={};var pseudoTime=this.pseudoTime;this.prevPseudoTime=pseudoTime;var proposals=[];this.constraints.forEach(function(t){if(t.proposeNextPseudoTime)proposals.push({proposer:t,time:t.proposeNextPseudoTime(pseudoTime)})});if(proposals.length>0){this.pseudoTime=this.computeNextPseudoTimeFromProposals(pseudoTime,proposals);this.converged=false}};Sketchpad.prototype.iterateSearchChoicesForUpToMillis=function(timeMillis){var epsilon=this.epsilon;var sols=this.collectPerConstraintSolutions(timeMillis,false);var didSomething=sols.didSomething;var totalError=sols.error;var res={error:totalError,count:0};if(didSomething){var allSolutionChoices=sols.solutions;var choicesCs=allSolutionChoices.map(function(c){return c.constraint});var cCount=choicesCs.length;var choicesSs=allSolutionChoices.map(function(c){return c.solutions});var allSolutionCombos=allCombinationsOfArrayElements(choicesSs).map(function(combo){var curr=[];for(var i=0;i<cCount;i++){curr.push({constraint:choicesCs[i],solutions:combo[i]})}return curr});var count=allSolutionCombos.length;var choiceTO=timeMillis/count;if(this.debug)log("possible choices",count,"per choice timeout",choiceTO);for(var i=0;i<count;i++){var copied,last=i==count-1;if(this.debug)log("trying choice: "+i);var allSolutions=allSolutionCombos[i];var collectedSolutions=this.collectPerPropertySolutions(allSolutions);if(!last)copied=this.getCurrentPropValuesAffectableBySolutions(collectedSolutions);if(this.unrollOnConflicts)applySolutionsWithUnrollOnConflict(this,collectedSolutions);else applySolutions(this,collectedSolutions);res=this.iterateForUpToMillis(choiceTO);var choiceErr=this.computeCurrentError();if(choiceErr<epsilon||last)break;this.revertPropValuesBasedOnArg(copied)}}return res};Sketchpad.prototype.getCurrentPropValuesAffectableBySolutions=function(solutions){var res={};for(var objId in solutions){var currObj=sketchpad.objMap[objId];var propsN={};res[objId]=propsN;var props=solutions[objId];for(var p in props){propsN[p]=currObj[p]}}return res};Sketchpad.prototype.revertPropValuesBasedOnArg=function(values){for(var objId in values){var currObj=sketchpad.objMap[objId];var props=values[objId];for(var p in props){currObj[p]=props[p]}}};Sketchpad.prototype.checkConvergence=function(currError){if(currError<=this.epsilon){this.converged=true}else{this.errorUnmovedCount=this.lastIterationError==currError?this.errorUnmovedCount+1:0;if(this.errorUnmovedCount==this.numberOfSameErrorOcurrToBeConsideredConvergence){this.converged=true;this.errorUnmovedCount=0}else this.converged=false}this.lastIterationError=currError};Sketchpad.prototype.solveForUpToMillis=function(tMillis){this.doTasksOnEachTimeStep(this.pseudoTime,this.prevPseudoTime);var res;if(this.searchOn)res=this.iterateSearchChoicesForUpToMillis(tMillis);else res=this.iterateForUpToMillis(tMillis);this.checkConvergence(res.error);this.doTasksAfterEachTimeStep(this.pseudoTime,this.prevPseudoTime);return res};Sketchpad.prototype.doOneIterationAsEntirePhase=function(timeMillis){var res=this.doOneIteration(timeMillis);this.checkConvergence(res);return res};Sketchpad.prototype.iterateForUpToMillis=function(tMillis){var count=0,totalError=0,epsilon=this.epsilon;var currError,lastError;var t0,t;t0=this.currentTime();do{lastError=currError;currError=this.doOneIteration(t0);t=this.currentTime()-t0;if(currError>0){count++;totalError+=currError}}while(currError>epsilon&&!(currError>=lastError)&&t<tMillis);return{error:totalError,count:count}};Sketchpad.prototype.sumJoinSolutions=function(curr,solutions){var rho=this.rho;var sum=0;solutions.forEach(function(v){sum+=v});var res=curr+rho*(sum/solutions.length-curr);return res};Sketchpad.prototype.lastOneWinsJoinSolutions=function(curr,solutions){return solutions[solutions.length-1]};Sketchpad.prototype.randomChoiceJoinSolutions=function(curr,solutions){return solutions[Math.floor(Math.random()*solutions.length)]};Sketchpad.prototype.arrayAddJoinSolutions=function(curr,solutions){solutions.forEach(function(v){curr.push(v)});return curr};Sketchpad.prototype.dictionaryAddJoinSolutions=function(curr,solutions){solutions.forEach(function(v){for(var k in v)curr[k]=v[k]});return curr};Sketchpad.prototype.dictionaryAddNoConflictJoinSolutions=function(curr,solutions){var seen={};solutions.forEach(function(v){for(var k in v){var prev=seen[k];var newV=v[k];if(prev&&prev!==newV){this.discardIteration=true;log("conflict in this solution set:",solutions);return curr}seen[k]=newV}});return this.dictionaryAddJoinSolutions(curr,solutions)};Sketchpad.prototype.defaultJoinSolutions=function(curr,solutions){return this.sumJoinSolutions(curr,solutions)};Sketchpad.prototype.registerEvent=function(name,callback,optDescription){var id=this.eventHandlers.length;this.eventHandlers.push(callback);var handler=function(e){this.events.push([id,e])}.bind(this);if(!this.eventHandlersInternal[name]){this.eventHandlersInternal[name]=[];this.eventDescriptions[name]=[]}this.eventHandlersInternal[name].push(handler);this.eventDescriptions[name].push(optDescription);document.body.addEventListener(name,handler)};Sketchpad.prototype.handleEvents=function(){if(this.events.length>0)this.converged=false;this.events.forEach(function(nameAndE){var id=nameAndE[0];var e=nameAndE[1];var h=this.eventHandlers[id];if(h!==undefined)h(e)}.bind(this));this.events=[]};Sketchpad.prototype.doOnEachTimeStepFns=function(pseudoTime,prevPseudoTime){this.thingsWithOnEachTimeStepFn.forEach(function(t){t.onEachTimeStep(pseudoTime,prevPseudoTime)})};Sketchpad.prototype.doAfterEachTimeStepFns=function(pseudoTime,prevPseudoTime){this.thingsWithAfterEachTimeStepFn.forEach(function(t){t.afterEachTimeStep(pseudoTime,prevPseudoTime)})};Sketchpad.prototype.setOnEachTimeStep=function(onEachTimeFn,optDescription){this.onEachTimeStep=onEachTimeFn;if(optDescription)this.onEachTimeStepHandlerDescriptions["general"]=[optDescription]};Sketchpad.prototype.unsetOnEachTimeStep=function(){this.onEachTimeStep=undefined;delete this.onEachTimeStepHandlerDescriptions["general"]};Sketchpad.prototype.setOption=function(opt,val){this[opt]=val};function collectPerPropertySolutionsAddSolution(sketchpad,soln,sofar,seenPriorities){var c=soln.constraint;var priority=c.__priority;for(var obj in soln.solutions){var currObj=c[obj];var currObjId=currObj.__id;var d=soln.solutions[obj];var keys=Object.keys(d);for(var i=0;i<keys.length;i++){var prop=keys[i];var perPropSoln=sofar[currObjId];var perPropPrio=seenPriorities[currObjId];var propSolns,prio;if(perPropSoln===undefined){perPropSoln={};perPropPrio={};sofar[currObjId]=perPropSoln;seenPriorities[currObjId]=perPropPrio;propSolns=[];perPropSoln[prop]=propSolns;perPropPrio[prop]=priority}else{propSolns=perPropSoln[prop];if(propSolns===undefined){propSolns=[];perPropSoln[prop]=propSolns;perPropPrio[prop]=priority}}var lastPrio=perPropPrio[prop];if(priority>lastPrio){perPropPrio[prop]=priority;while(propSolns.length>0)propSolns.pop()}else if(priority<lastPrio){break}propSolns.push(d[prop])}}}function applySolutions(sketchpad,solutions){var keys1=Object.keys(solutions);for(var i=0;i<keys1.length;i++){var objId=keys1[i];var perProp=solutions[objId];var currObj=sketchpad.objMap[objId];var keys2=Object.keys(perProp);for(var j=0;j<keys2.length;j++){var prop=keys2[j];var propSolns=perProp[prop];var currVal=currObj[prop];var joinFn=currObj.solutionJoins!==undefined&&currObj.solutionJoins()[prop]!==undefined?currObj.solutionJoins()[prop]:sketchpad.sumJoinSolutions;currObj[prop]=joinFn.bind(sketchpad)(currVal,propSolns)}}}function applySolutionsWithUnrollOnConflict(sketchpad,solutions){this.discardIteration=false;var keys1=Object.keys(solutions);for(var i=0;i<keys1.length;i++){var objId=keys1[i];var perProp=solutions[objId];var currObj=sketchpad.objMap[objId];var keys2=Object.keys(perProp);for(var j=0;j<keys2.length;j++){var prop=keys2[j];var propSolns=perProp[prop];var currVal=currObj[prop];currObj[prop+"__old"]=currVal;var joinFn=currObj.solutionJoins!==undefined&&currObj.solutionJoins()[prop]!==undefined?currObj.solutionJoins()[prop]:sketchpad.sumJoinSolutions;currObj[prop]=joinFn.bind(sketchpad)(currVal,propSolns)}}if(!this.discardIteration)return;log("discarding solutions since there was a conflict...");for(var i=0;i<keys1.length;i++){var objId=keys1[i];var perProp=solutions[objId];var currObj=sketchpad.objMap[objId];var keys2=Object.keys(perProp);for(var j=0;j<keys2.length;j++){var prop=keys2[j];var propSolns=perProp[prop];var currVal=currObj[prop];currObj[prop]=currObj[prop+"__old"];delete currObj[prop+"__old"]}}}function involves(constraint,obj){for(var p in constraint){if(constraint[p]===obj){return true}}return false}function allCombinationsOfArrayElements(arrayOfArrays){if(arrayOfArrays.length>1){var first=arrayOfArrays[0];var rest=allCombinationsOfArrayElements(arrayOfArrays.slice(1));var res=[];for(var j=0;j<rest.length;j++){var r=rest[j];for(var i=0;i<first.length;i++){res.push([first[i]].concat(r))}}return res}else if(arrayOfArrays.length==1){return arrayOfArrays[0].map(function(e){return[e]})}else return[]}sketchpad=new Sketchpad;installArithmeticConstraints(Sketchpad);installGeometricConstraints(Sketchpad);installSimulationConstraints(Sketchpad);install3DGeometricConstraints(Sketchpad);install3DSimulationConstraints(Sketchpad);module.exports=Sketchpad},{"./2d/arithmetic-constraints.js":1,"./2d/geometric-constraints.js":2,"./2d/simulation-constraints.js":3,"./3d/geometric-constraints.js":4,"./3d/simulation-constraints.js":5}]},{},[6])(6)});